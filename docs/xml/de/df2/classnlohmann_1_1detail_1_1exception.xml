<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="de/df2/classnlohmann_1_1detail_1_1exception" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::exception</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <derivedcompoundref refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator" prot="public" virt="non-virtual">nlohmann::detail::invalid_iterator</derivedcompoundref>
    <derivedcompoundref refid="d5/d1b/classnlohmann_1_1detail_1_1other__error" prot="public" virt="non-virtual">nlohmann::detail::other_error</derivedcompoundref>
    <derivedcompoundref refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range" prot="public" virt="non-virtual">nlohmann::detail::out_of_range</derivedcompoundref>
    <derivedcompoundref refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error" prot="public" virt="non-virtual">nlohmann::detail::parse_error</derivedcompoundref>
    <derivedcompoundref refid="da/d1c/classnlohmann_1_1detail_1_1type__error" prot="public" virt="non-virtual">nlohmann::detail::type_error</derivedcompoundref>
    <includes refid="d5/db8/json_8hpp" local="no">json.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="de/df2/classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int nlohmann::detail::exception::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
<para>the id of the exception </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2652" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2652" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="de/df2/classnlohmann_1_1detail_1_1exception_1ad54778dc4f125488cbce8ec276dfdde2" prot="private" static="no" mutable="no">
        <type>std::runtime_error</type>
        <definition>std::runtime_error nlohmann::detail::exception::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
<para>an exception object as storage for error messages </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2721" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2721" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="de/df2/classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* nlohmann::detail::exception::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <briefdescription>
<para>returns the explanatory string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2646" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2646" bodyend="2649"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="de/df2/classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::exception::exception</definition>
        <argsstring>(int id_, const char *what_arg)</argsstring>
        <name>exception</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2656" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2656" bodyend="2656"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="de/df2/classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref></type>
        <definition>static std::string nlohmann::detail::exception::name</definition>
        <argsstring>(const std::string &amp;ename, int id_)</argsstring>
        <name>name</name>
        <param>
          <type>const <ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref> &amp;</type>
          <declname>ename</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2658" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2658" bodyend="2661"/>
        <references refid="d3/d9b/namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16" compoundref="d5/db8/json_8hpp" startline="25855" endline="25858">nlohmann::to_string</references>
        <referencedby refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error_1ae77bd584cb9101140790219af7fec1ce" compoundref="d5/db8/json_8hpp" startline="2782" endline="2787">nlohmann::detail::parse_error::create</referencedby>
        <referencedby refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator_1a34104b98ab00564e564176b4d2ba7c3c" compoundref="d5/db8/json_8hpp" startline="2861" endline="2865">nlohmann::detail::invalid_iterator::create</referencedby>
        <referencedby refid="da/d1c/classnlohmann_1_1detail_1_1type__error_1a838a5e301cf97289c2d106b9ace1470f" compoundref="d5/db8/json_8hpp" startline="2916" endline="2920">nlohmann::detail::type_error::create</referencedby>
        <referencedby refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1a238f1bda3b6c92b5970fbf9187ccd325" compoundref="d5/db8/json_8hpp" startline="2964" endline="2968">nlohmann::detail::out_of_range::create</referencedby>
        <referencedby refid="d5/d1b/classnlohmann_1_1detail_1_1other__error_1a3a25fa67a0ec36b5d36cbc4424eb901d" compoundref="d5/db8/json_8hpp" startline="3003" endline="3007">nlohmann::detail::other_error::create</referencedby>
      </memberdef>
      <memberdef kind="function" id="de/df2/classnlohmann_1_1detail_1_1exception_1aa353a7dba4fd179f7224b8a2a238a264" prot="protected" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonType</type>
          </param>
        </templateparamlist>
        <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref></type>
        <definition>static std::string nlohmann::detail::exception::diagnostics</definition>
        <argsstring>(const BasicJsonType &amp;leaf_element)</argsstring>
        <name>diagnostics</name>
        <param>
          <type>const BasicJsonType &amp;</type>
          <declname>leaf_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2664" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2664" bodyend="2717"/>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">nlohmann::detail::array</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a9d486a036924098fe1a77de14d23f56c" compoundref="d5/db8/json_8hpp" startline="2551" endline="2556">nlohmann::detail::escape</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985aa8cfde6331bd59eb2ac96f8911c4b666">nlohmann::detail::object</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21">nlohmann::detail::string</references>
        <references refid="d3/d9b/namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16" compoundref="d5/db8/json_8hpp" startline="25855" endline="25858">nlohmann::to_string</references>
        <referencedby refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error_1ae77bd584cb9101140790219af7fec1ce" compoundref="d5/db8/json_8hpp" startline="2782" endline="2787">nlohmann::detail::parse_error::create</referencedby>
        <referencedby refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator_1a34104b98ab00564e564176b4d2ba7c3c" compoundref="d5/db8/json_8hpp" startline="2861" endline="2865">nlohmann::detail::invalid_iterator::create</referencedby>
        <referencedby refid="da/d1c/classnlohmann_1_1detail_1_1type__error_1a838a5e301cf97289c2d106b9ace1470f" compoundref="d5/db8/json_8hpp" startline="2916" endline="2920">nlohmann::detail::type_error::create</referencedby>
        <referencedby refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1a238f1bda3b6c92b5970fbf9187ccd325" compoundref="d5/db8/json_8hpp" startline="2964" endline="2968">nlohmann::detail::out_of_range::create</referencedby>
        <referencedby refid="d5/d1b/classnlohmann_1_1detail_1_1other__error_1a3a25fa67a0ec36b5d36cbc4424eb901d" compoundref="d5/db8/json_8hpp" startline="3003" endline="3007">nlohmann::detail::other_error::create</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>general exception of the <ref refid="d9/dcc/classnlohmann_1_1basic__json" kindref="compound">basic_json</ref> class </para>    </briefdescription>
    <detaileddescription>
<para>This class is an extension of <computeroutput>std::exception</computeroutput> objects with a member <emphasis>id</emphasis> for exception ids. It is used as the base class for all exceptions thrown by the <ref refid="d9/dcc/classnlohmann_1_1basic__json" kindref="compound">basic_json</ref> class. This class can hence be used as &quot;wildcard&quot; to catch exceptions.</para><para>Subclasses:<itemizedlist>
<listitem><para><ref refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error" kindref="compound">parse_error</ref> for exceptions indicating a parse error</para></listitem><listitem><para><ref refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator" kindref="compound">invalid_iterator</ref> for exceptions indicating errors with iterators</para></listitem><listitem><para><ref refid="da/d1c/classnlohmann_1_1detail_1_1type__error" kindref="compound">type_error</ref> for exceptions indicating executing a member function with a wrong type</para></listitem><listitem><para><ref refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref> for exceptions indicating access out of the defined range</para></listitem><listitem><para><ref refid="d5/d1b/classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref> for exceptions indicating other library errors</para></listitem></itemizedlist>
</para><para>{The following code shows how arbitrary library exceptions can be caught.,exception}</para><para><simplesect kind="since"><para>version 3.0.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="266">
        <label>nlohmann::detail::invalid_iterator</label>
        <link refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="268">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="269">
        <label>nlohmann::detail::parse_error</label>
        <link refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="265">
        <label>std::exception</label>
      </node>
      <node id="270">
        <label>nlohmann::detail::type_error</label>
        <link refid="da/d1c/classnlohmann_1_1detail_1_1type__error"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
      <node id="264">
        <label>nlohmann::detail::exception</label>
        <link refid="de/df2/classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="265" relation="public-inheritance">
        </childnode>
      </node>
      <node id="267">
        <label>nlohmann::detail::other_error</label>
        <link refid="d5/d1b/classnlohmann_1_1detail_1_1other__error"/>
        <childnode refid="264" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="273">
        <label>std::runtime_error</label>
        <childnode refid="272" relation="public-inheritance">
        </childnode>
      </node>
      <node id="274">
        <label>int</label>
      </node>
      <node id="272">
        <label>std::exception</label>
      </node>
      <node id="271">
        <label>nlohmann::detail::exception</label>
        <link refid="de/df2/classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="272" relation="public-inheritance">
        </childnode>
        <childnode refid="273" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
        <childnode refid="274" relation="usage">
          <edgelabel>+id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2643" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2642" bodyend="2722"/>
    <listofallmembers>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1aa353a7dba4fd179f7224b8a2a238a264" prot="protected" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>diagnostics</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>exception</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>id</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1ad54778dc4f125488cbce8ec276dfdde2" prot="private" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>m</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>name</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" virt="non-virtual"><scope>nlohmann::detail::exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
