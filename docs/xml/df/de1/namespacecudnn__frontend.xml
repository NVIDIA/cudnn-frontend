<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="df/de1/namespacecudnn__frontend" kind="namespace" language="C++">
    <compoundname>cudnn_frontend</compoundname>
    <innerclass refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor" prot="public">cudnn_frontend::BackendDescriptor</innerclass>
    <innerclass refid="d0/d92/classcudnn__frontend_1_1ConditionalStreamer" prot="public">cudnn_frontend::ConditionalStreamer</innerclass>
    <innerclass refid="d6/d73/classcudnn__frontend_1_1ConvDesc__v8" prot="public">cudnn_frontend::ConvDesc_v8</innerclass>
    <innerclass refid="db/de1/classcudnn__frontend_1_1ConvDescBuilder__v8" prot="public">cudnn_frontend::ConvDescBuilder_v8</innerclass>
    <innerclass refid="d9/dca/classcudnn__frontend_1_1cudnnException" prot="public">cudnn_frontend::cudnnException</innerclass>
    <innerclass refid="dc/d3c/classcudnn__frontend_1_1Engine__v8" prot="public">cudnn_frontend::Engine_v8</innerclass>
    <innerclass refid="d9/dfd/classcudnn__frontend_1_1EngineBuilder__v8" prot="public">cudnn_frontend::EngineBuilder_v8</innerclass>
    <innerclass refid="df/d83/classcudnn__frontend_1_1EngineConfig__v8" prot="public">cudnn_frontend::EngineConfig_v8</innerclass>
    <innerclass refid="dd/d72/classcudnn__frontend_1_1EngineConfigBuilder__v8" prot="public">cudnn_frontend::EngineConfigBuilder_v8</innerclass>
    <innerclass refid="dc/da3/classcudnn__frontend_1_1EngineConfigGenerator" prot="public">cudnn_frontend::EngineConfigGenerator</innerclass>
    <innerclass refid="db/d99/classcudnn__frontend_1_1EngineFallbackList__v8" prot="public">cudnn_frontend::EngineFallbackList_v8</innerclass>
    <innerclass refid="d9/df1/classcudnn__frontend_1_1EngineFallbackListBuilder__v8" prot="public">cudnn_frontend::EngineFallbackListBuilder_v8</innerclass>
    <innerclass refid="db/ddb/classcudnn__frontend_1_1EngineHeuristics__v8" prot="public">cudnn_frontend::EngineHeuristics_v8</innerclass>
    <innerclass refid="d1/d28/classcudnn__frontend_1_1EngineHeuristicsBuilder__v8" prot="public">cudnn_frontend::EngineHeuristicsBuilder_v8</innerclass>
    <innerclass refid="d5/d06/classcudnn__frontend_1_1ExecutionPlan__v8" prot="public">cudnn_frontend::ExecutionPlan_v8</innerclass>
    <innerclass refid="d1/d74/classcudnn__frontend_1_1ExecutionPlanBuilder__v8" prot="public">cudnn_frontend::ExecutionPlanBuilder_v8</innerclass>
    <innerclass refid="dc/d6e/classcudnn__frontend_1_1ExecutionPlanCache__v1" prot="public">cudnn_frontend::ExecutionPlanCache_v1</innerclass>
    <innerclass refid="da/df5/classcudnn__frontend_1_1ExecutionPlanCache__v2" prot="public">cudnn_frontend::ExecutionPlanCache_v2</innerclass>
    <innerclass refid="d6/db7/classcudnn__frontend_1_1MatMulDesc__v8" prot="public">cudnn_frontend::MatMulDesc_v8</innerclass>
    <innerclass refid="de/d00/classcudnn__frontend_1_1MatMulDescBuilder__v8" prot="public">cudnn_frontend::MatMulDescBuilder_v8</innerclass>
    <innerclass refid="d5/d14/classcudnn__frontend_1_1OpaqueBackendPointer" prot="public">cudnn_frontend::OpaqueBackendPointer</innerclass>
    <innerclass refid="d4/d30/classcudnn__frontend_1_1Operation__v8" prot="public">cudnn_frontend::Operation_v8</innerclass>
    <innerclass refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8" prot="public">cudnn_frontend::OperationBuilder_v8</innerclass>
    <innerclass refid="de/dd9/classcudnn__frontend_1_1OperationGraph__v8" prot="public">cudnn_frontend::OperationGraph_v8</innerclass>
    <innerclass refid="d4/d39/classcudnn__frontend_1_1OperationGraphBuilder__v8" prot="public">cudnn_frontend::OperationGraphBuilder_v8</innerclass>
    <innerclass refid="d4/d26/classcudnn__frontend_1_1PointWiseDesc__v8" prot="public">cudnn_frontend::PointWiseDesc_v8</innerclass>
    <innerclass refid="d5/d02/classcudnn__frontend_1_1PointWiseDescBuilder__v8" prot="public">cudnn_frontend::PointWiseDescBuilder_v8</innerclass>
    <innerclass refid="d4/df1/classcudnn__frontend_1_1ReductionDesc__v8" prot="public">cudnn_frontend::ReductionDesc_v8</innerclass>
    <innerclass refid="d2/da0/classcudnn__frontend_1_1ReductionDescBuilder__v8" prot="public">cudnn_frontend::ReductionDescBuilder_v8</innerclass>
    <innerclass refid="d6/da7/classcudnn__frontend_1_1Tensor__v8" prot="public">cudnn_frontend::Tensor_v8</innerclass>
    <innerclass refid="db/dae/classcudnn__frontend_1_1TensorBuilder__v8" prot="public">cudnn_frontend::TensorBuilder_v8</innerclass>
    <innerclass refid="d0/d20/classcudnn__frontend_1_1VariantPack__v8" prot="public">cudnn_frontend::VariantPack_v8</innerclass>
    <innerclass refid="d4/dce/classcudnn__frontend_1_1VariantPackBuilder__v8" prot="public">cudnn_frontend::VariantPackBuilder_v8</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3" prot="public" static="no">
        <name>CudnnFindSamplingTechnique</name>
        <enumvalue id="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3ac8ab707d81df65503b6b0ecc67675158" prot="public">
          <name>CUDNN_FIND_SAMPLE_ONCE</name>
          <briefdescription>
<para>Sample once quick but may have unstable values. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3a903bfd2e4d1b8ab2a7197be752c618a6" prot="public">
          <name>CUDNN_FIND_SAMPLE_MEDIAN_OF_THREE</name>
          <briefdescription>
<para>Sample 3 times and take median. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3a8199dfa6701edb38f52a74d9e229b43d" prot="public">
          <name>CUDNN_FIND_SAMPLE_TILL_STABLE</name>
          <briefdescription>
<para>Sample multiple times till stable. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" line="34" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" bodystart="34" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ac94d582cdfa2adf3d68a4e675e5d69aa" prot="public" static="no">
        <type>std::shared_ptr&lt; <ref refid="d5/d14/classcudnn__frontend_1_1OpaqueBackendPointer" kindref="compound">OpaqueBackendPointer</ref> &gt;</type>
        <definition>using cudnn_frontend::ManagedOpaqueDescriptor = typedef std::shared_ptr&lt;OpaqueBackendPointer&gt;</definition>
        <argsstring></argsstring>
        <name>ManagedOpaqueDescriptor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_backend_base.h" line="84" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_backend_base.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1aa20fd945a531e0a3a5007e65fe917770" prot="public" static="no">
        <type><ref refid="d6/da7/classcudnn__frontend_1_1Tensor__v8" kindref="compound">Tensor_v8</ref></type>
        <definition>using cudnn_frontend::Tensor = typedef Tensor_v8</definition>
        <argsstring></argsstring>
        <name>Tensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="119" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a9fea2e22198aaf2ea11a0df46abd0749" prot="public" static="no">
        <type><ref refid="db/dae/classcudnn__frontend_1_1TensorBuilder__v8" kindref="compound">TensorBuilder_v8</ref></type>
        <definition>using cudnn_frontend::TensorBuilder = typedef TensorBuilder_v8</definition>
        <argsstring></argsstring>
        <name>TensorBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="120" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ae24bc7541c87c642cdef8eaf83c8eacc" prot="public" static="no">
        <type><ref refid="d6/d73/classcudnn__frontend_1_1ConvDesc__v8" kindref="compound">ConvDesc_v8</ref></type>
        <definition>using cudnn_frontend::ConvDesc = typedef ConvDesc_v8</definition>
        <argsstring></argsstring>
        <name>ConvDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="121" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a91b5e4e82a18d2212ad6be6d5398752c" prot="public" static="no">
        <type><ref refid="db/de1/classcudnn__frontend_1_1ConvDescBuilder__v8" kindref="compound">ConvDescBuilder_v8</ref></type>
        <definition>using cudnn_frontend::ConvDescBuilder = typedef ConvDescBuilder_v8</definition>
        <argsstring></argsstring>
        <name>ConvDescBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="122" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a7f878662c40c287736343affc43f25dc" prot="public" static="no">
        <type><ref refid="d5/d02/classcudnn__frontend_1_1PointWiseDescBuilder__v8" kindref="compound">PointWiseDescBuilder_v8</ref></type>
        <definition>using cudnn_frontend::PointWiseDescBuilder = typedef PointWiseDescBuilder_v8</definition>
        <argsstring></argsstring>
        <name>PointWiseDescBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="123" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ada5353494ce649fc915154ced52dcceb" prot="public" static="no">
        <type><ref refid="d4/d26/classcudnn__frontend_1_1PointWiseDesc__v8" kindref="compound">PointWiseDesc_v8</ref></type>
        <definition>using cudnn_frontend::PointWiseDesc = typedef PointWiseDesc_v8</definition>
        <argsstring></argsstring>
        <name>PointWiseDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="124" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ad809552e9ec400bcbfcfc0ea5acd4e56" prot="public" static="no">
        <type><ref refid="d6/db7/classcudnn__frontend_1_1MatMulDesc__v8" kindref="compound">MatMulDesc_v8</ref></type>
        <definition>using cudnn_frontend::MatMulDesc = typedef MatMulDesc_v8</definition>
        <argsstring></argsstring>
        <name>MatMulDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="125" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a0c344e3bc1f332aa9f5b213eb1ae9ee6" prot="public" static="no">
        <type><ref refid="de/d00/classcudnn__frontend_1_1MatMulDescBuilder__v8" kindref="compound">MatMulDescBuilder_v8</ref></type>
        <definition>using cudnn_frontend::MatMulDescBuilder = typedef MatMulDescBuilder_v8</definition>
        <argsstring></argsstring>
        <name>MatMulDescBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="126" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a4b09ba4625f988c32edfc305b5397f48" prot="public" static="no">
        <type><ref refid="d4/df1/classcudnn__frontend_1_1ReductionDesc__v8" kindref="compound">ReductionDesc_v8</ref></type>
        <definition>using cudnn_frontend::ReductionDesc = typedef ReductionDesc_v8</definition>
        <argsstring></argsstring>
        <name>ReductionDesc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="127" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1aa5a388535aed6e36ef90002af0b80a80" prot="public" static="no">
        <type><ref refid="d2/da0/classcudnn__frontend_1_1ReductionDescBuilder__v8" kindref="compound">ReductionDescBuilder_v8</ref></type>
        <definition>using cudnn_frontend::ReductionDescBuilder = typedef ReductionDescBuilder_v8</definition>
        <argsstring></argsstring>
        <name>ReductionDescBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="128" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a2f1497702504947953a0f5a69b6eeb2a" prot="public" static="no">
        <type><ref refid="d4/d30/classcudnn__frontend_1_1Operation__v8" kindref="compound">Operation_v8</ref></type>
        <definition>using cudnn_frontend::Operation = typedef Operation_v8</definition>
        <argsstring></argsstring>
        <name>Operation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="129" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ae6d02ff4c7922673ed3862145a4019d4" prot="public" static="no">
        <type><ref refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8" kindref="compound">OperationBuilder_v8</ref></type>
        <definition>using cudnn_frontend::OperationBuilder = typedef OperationBuilder_v8</definition>
        <argsstring></argsstring>
        <name>OperationBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="130" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="130" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1aae6a627b67858b15afbc5656afa88123" prot="public" static="no">
        <type><ref refid="d1/d28/classcudnn__frontend_1_1EngineHeuristicsBuilder__v8" kindref="compound">EngineHeuristicsBuilder_v8</ref></type>
        <definition>using cudnn_frontend::EngineHeuristicsBuilder = typedef EngineHeuristicsBuilder_v8</definition>
        <argsstring></argsstring>
        <name>EngineHeuristicsBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="131" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a147bbd62e1c7c6b3fbc6869ab776b125" prot="public" static="no">
        <type><ref refid="db/ddb/classcudnn__frontend_1_1EngineHeuristics__v8" kindref="compound">EngineHeuristics_v8</ref></type>
        <definition>using cudnn_frontend::EngineHeuristics = typedef EngineHeuristics_v8</definition>
        <argsstring></argsstring>
        <name>EngineHeuristics</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="132" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a4f90ec150d149f8f0751daa3ad625839" prot="public" static="no">
        <type><ref refid="d9/dfd/classcudnn__frontend_1_1EngineBuilder__v8" kindref="compound">EngineBuilder_v8</ref></type>
        <definition>using cudnn_frontend::EngineBuilder = typedef EngineBuilder_v8</definition>
        <argsstring></argsstring>
        <name>EngineBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="133" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a1ed8c535fea949a10acd26e279cc28a1" prot="public" static="no">
        <type><ref refid="dc/d3c/classcudnn__frontend_1_1Engine__v8" kindref="compound">Engine_v8</ref></type>
        <definition>using cudnn_frontend::Engine = typedef Engine_v8</definition>
        <argsstring></argsstring>
        <name>Engine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="134" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a2559dec72130bbdc95c02fb0df79fd42" prot="public" static="no">
        <type><ref refid="df/d83/classcudnn__frontend_1_1EngineConfig__v8" kindref="compound">EngineConfig_v8</ref></type>
        <definition>using cudnn_frontend::EngineConfig = typedef EngineConfig_v8</definition>
        <argsstring></argsstring>
        <name>EngineConfig</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="135" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ac46e1785757fde7c10e3d527f697fde8" prot="public" static="no">
        <type><ref refid="dd/d72/classcudnn__frontend_1_1EngineConfigBuilder__v8" kindref="compound">EngineConfigBuilder_v8</ref></type>
        <definition>using cudnn_frontend::EngineConfigBuilder = typedef EngineConfigBuilder_v8</definition>
        <argsstring></argsstring>
        <name>EngineConfigBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="136" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ad6ac8113b406ee2b6f20eff4dd2b4e01" prot="public" static="no">
        <type><ref refid="d0/d20/classcudnn__frontend_1_1VariantPack__v8" kindref="compound">VariantPack_v8</ref></type>
        <definition>using cudnn_frontend::VariantPack = typedef VariantPack_v8</definition>
        <argsstring></argsstring>
        <name>VariantPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="137" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ab5b844f5de8ad3c056f0cb1cd0fb3ac1" prot="public" static="no">
        <type><ref refid="d4/dce/classcudnn__frontend_1_1VariantPackBuilder__v8" kindref="compound">VariantPackBuilder_v8</ref></type>
        <definition>using cudnn_frontend::VariantPackBuilder = typedef VariantPackBuilder_v8</definition>
        <argsstring></argsstring>
        <name>VariantPackBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="138" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a61fbd4506f1249c686164fb33d858999" prot="public" static="no">
        <type><ref refid="db/d99/classcudnn__frontend_1_1EngineFallbackList__v8" kindref="compound">EngineFallbackList_v8</ref></type>
        <definition>using cudnn_frontend::EngineFallbackList = typedef EngineFallbackList_v8</definition>
        <argsstring></argsstring>
        <name>EngineFallbackList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="139" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1aeb6699f494fa895d402898dae554f5a9" prot="public" static="no">
        <type><ref refid="d9/df1/classcudnn__frontend_1_1EngineFallbackListBuilder__v8" kindref="compound">EngineFallbackListBuilder_v8</ref></type>
        <definition>using cudnn_frontend::EngineFallbackListBuilder = typedef EngineFallbackListBuilder_v8</definition>
        <argsstring></argsstring>
        <name>EngineFallbackListBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" line="140" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a84a5f004bdf17747bf7cf45d6fc754cd" prot="public" static="no">
        <type>std::vector&lt; <ref refid="df/de1/namespacecudnn__frontend_1ac94d582cdfa2adf3d68a4e675e5d69aa" kindref="member">ManagedOpaqueDescriptor</ref> &gt;</type>
        <definition>using cudnn_frontend::EngineConfigList = typedef std::vector&lt;ManagedOpaqueDescriptor&gt;</definition>
        <argsstring></argsstring>
        <name>EngineConfigList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>EngineConfigList class This is a RAII type class that holds naked EngineConfig backendDescriptor. The purpose of this class is to provide an easy interface to store the EngineConfigs generated from various source and apply a filter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfig.h" line="248" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfig.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a560644a5c1e6016c509a379ca6e03f05" prot="public" static="no">
        <type>std::vector&lt; <ref refid="df/de1/namespacecudnn__frontend_1a984c10aa29daac796444bda66bdef26e" kindref="member">cudnn_frontend::ExecutionPlan</ref> &gt;</type>
        <definition>using cudnn_frontend::executionPlans_t = typedef std::vector&lt;cudnn_frontend::ExecutionPlan&gt;</definition>
        <argsstring></argsstring>
        <name>executionPlans_t</name>
        <briefdescription>
<para>Variety of renames. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" line="30" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ad31f040777311d1d1a7a2490f23e026e" prot="public" static="no">
        <type>std::function&lt; bool(<ref refid="df/de1/namespacecudnn__frontend_1a984c10aa29daac796444bda66bdef26e" kindref="member">cudnn_frontend::ExecutionPlan</ref> const &amp;plan)&gt;</type>
        <definition>using cudnn_frontend::Predicate = typedef std::function&lt;bool(cudnn_frontend::ExecutionPlan const &amp;plan)&gt;</definition>
        <argsstring></argsstring>
        <name>Predicate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" line="31" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a53716729f10b4064fb41dec9dd32ffd6" prot="public" static="no">
        <type>std::function&lt; <ref refid="df/de1/namespacecudnn__frontend_1a84a5f004bdf17747bf7cf45d6fc754cd" kindref="member">cudnn_frontend::EngineConfigList</ref>(<ref refid="df/de1/namespacecudnn__frontend_1ac86ce924df5209c4ce1bc25856eea6e6" kindref="member">cudnn_frontend::OperationGraph</ref> &amp;)&gt;</type>
        <definition>using cudnn_frontend::GeneratorSource = typedef std::function&lt;cudnn_frontend::EngineConfigList(cudnn_frontend::OperationGraph &amp;)&gt;</definition>
        <argsstring></argsstring>
        <name>GeneratorSource</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" line="32" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a984c10aa29daac796444bda66bdef26e" prot="public" static="no">
        <type><ref refid="d5/d06/classcudnn__frontend_1_1ExecutionPlan__v8" kindref="compound">ExecutionPlan_v8</ref></type>
        <definition>using cudnn_frontend::ExecutionPlan = typedef ExecutionPlan_v8</definition>
        <argsstring></argsstring>
        <name>ExecutionPlan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlan.h" line="396" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlan.h" bodystart="396" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1aa508b66c4de02f4aacae8029dbe422eb" prot="public" static="no">
        <type><ref refid="d1/d74/classcudnn__frontend_1_1ExecutionPlanBuilder__v8" kindref="compound">ExecutionPlanBuilder_v8</ref></type>
        <definition>using cudnn_frontend::ExecutionPlanBuilder = typedef ExecutionPlanBuilder_v8</definition>
        <argsstring></argsstring>
        <name>ExecutionPlanBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlan.h" line="397" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlan.h" bodystart="397" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ab36c7aba5bedf33ef3b51c955685d1ce" prot="public" static="no">
        <type><ref refid="da/df5/classcudnn__frontend_1_1ExecutionPlanCache__v2" kindref="compound">ExecutionPlanCache_v2</ref></type>
        <definition>using cudnn_frontend::ExecutionPlanCache = typedef ExecutionPlanCache_v2</definition>
        <argsstring></argsstring>
        <name>ExecutionPlanCache</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlanCache.h" line="178" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_ExecutionPlanCache.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1ac86ce924df5209c4ce1bc25856eea6e6" prot="public" static="no">
        <type><ref refid="de/dd9/classcudnn__frontend_1_1OperationGraph__v8" kindref="compound">OperationGraph_v8</ref></type>
        <definition>using cudnn_frontend::OperationGraph = typedef OperationGraph_v8</definition>
        <argsstring></argsstring>
        <name>OperationGraph</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_OperationGraph.h" line="241" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_OperationGraph.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a0b7ba1175801c56d07d26785bcd8fb70" prot="public" static="no">
        <type><ref refid="d4/d39/classcudnn__frontend_1_1OperationGraphBuilder__v8" kindref="compound">OperationGraphBuilder_v8</ref></type>
        <definition>using cudnn_frontend::OperationGraphBuilder = typedef OperationGraphBuilder_v8</definition>
        <argsstring></argsstring>
        <name>OperationGraphBuilder</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_OperationGraph.h" line="242" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_OperationGraph.h" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="df/de1/namespacecudnn__frontend_1a360ee0c724a479660a6bd0815af46ac1" prot="public" static="no">
        <type>std::vector&lt; int64_t &gt;</type>
        <definition>using cudnn_frontend::feature_vector_t = typedef std::vector&lt;int64_t&gt;</definition>
        <argsstring></argsstring>
        <name>feature_vector_t</name>
        <briefdescription>
<para>Detailed feature_vector. Generally the Tensor and Operation properties. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="34" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1aee9c79eb8972c944de14ccd70bf5db43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="df/de1/namespacecudnn__frontend_1ac94d582cdfa2adf3d68a4e675e5d69aa" kindref="member">ManagedOpaqueDescriptor</ref></type>
        <definition>static ManagedOpaqueDescriptor cudnn_frontend::make_shared_backend_pointer</definition>
        <argsstring>(cudnnBackendDescriptorType_t type)</argsstring>
        <name>make_shared_backend_pointer</name>
        <param>
          <type>cudnnBackendDescriptorType_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_backend_base.h" line="88" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_backend_base.h" bodystart="88" bodyend="90"/>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga5ff39f2019a5a3fe8062bf887707877c" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="298" endline="383">cudnn_frontend::ExecutionPlanBuilder_v8::build</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga093a562caa7f8a906a362d9f70496020" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="152" endline="226">cudnn_frontend::ExecutionPlan_v8::buildTag</referencedby>
        <referencedby refid="dc/d3c/classcudnn__frontend_1_1Engine__v8_1a7609e82ac3dc04b67e9e73beb0f7cdae" compoundref="de/d6d/cudnn__frontend__Engine_8h" startline="174" endline="207">cudnn_frontend::Engine_v8::Engine_v8</referencedby>
        <referencedby refid="df/d83/classcudnn__frontend_1_1EngineConfig__v8_1ab761cb8a8a38495e913395fa872afb3e" compoundref="d6/d67/cudnn__frontend__EngineConfig_8h" startline="76" endline="89">cudnn_frontend::EngineConfig_v8::EngineConfig_v8</referencedby>
        <referencedby refid="d6/d46/group__EngineHeuristicsQuery_1ga1171cb5ce50baf0fab19fc458d4565b5" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="69" endline="99">cudnn_frontend::EngineHeuristics_v8::getEngineConfig</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a75bb541476d93b039f5fd9f9d29242e6" compoundref="d5/d36/cudnn__frontend__Filters_8h" startline="45" endline="68">hasNumericalNote</referencedby>
        <referencedby refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1a070df0d11a52793ce9480dbdcee0c24e" compoundref="dc/d11/cudnn__backend__base_8h" startline="144" endline="147">cudnn_frontend::BackendDescriptor::initialize_managed_backend_pointer</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1abcaf76bd6c7d8c59082fd53d2a8c897a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto cudnn_frontend::filter</definition>
        <argsstring>(Predicate pred, executionPlans_t &amp;plans) -&gt; executionPlans_t</argsstring>
        <name>filter</name>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1ad31f040777311d1d1a7a2490f23e026e" kindref="member">Predicate</ref></type>
          <declname>pred</declname>
        </param>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1a560644a5c1e6016c509a379ca6e03f05" kindref="member">executionPlans_t</ref> &amp;</type>
          <declname>plans</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filter out the execution plan based on the prerequisite conditions. Goes through vector of execution plans and if the predicate returns not to block (false), it is inserted into the filtered plans. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" line="106" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineConfigGenerator.h" bodystart="106" bodyend="118"/>
        <references refid="df/de1/namespacecudnn__frontend_1ac39691550c5659acffd2386354ed18c6" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="72" endline="75">getLogger</references>
        <referencedby refid="dc/da3/classcudnn__frontend_1_1EngineConfigGenerator_1a549f36645ef6134ff99909ca428dfc9c" compoundref="d2/d3b/cudnn__frontend__get__plan_8h" startline="50" endline="55">cudnn_frontend::EngineConfigGenerator::cudnnGetPlan</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a387b9a5a9cfdb5290ff5729852714f0d" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="228" endline="246">get_heuristics_list</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1af057a1fb628c89d02eb47c7cfa9ce0af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>static auto cudnn_frontend::get_fallback_engine_list</definition>
        <argsstring>(cudnnBackendDescriptorType_t mode, const std::string &amp;opGraphTag) -&gt; std::vector&lt; int &gt;</argsstring>
        <name>get_fallback_engine_list</name>
        <param>
          <type>cudnnBackendDescriptorType_t</type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>opGraphTag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Here we are using the term &quot;bias&quot; in the operationGraph as a proxy for the conv*bias* operation graph. We are not strictly checking the order of the operations in the graph. We propose this as a temporary workaround until the backend API supports querying the fallback list directly from cudnn </para>        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineFallbackList.h" line="30" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_EngineFallbackList.h" bodystart="30" bodyend="75"/>
        <referencedby refid="d9/df1/classcudnn__frontend_1_1EngineFallbackListBuilder__v8_1aae1a36ace3278dbedcf0d743a7744d98" compoundref="df/d3e/cudnn__frontend__EngineFallbackList_8h" startline="144" endline="171">cudnn_frontend::EngineFallbackListBuilder_v8::build</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1af66381faee9432a2cf757c3cd099b7f9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool cudnn_frontend::load_from_config</definition>
        <argsstring>(json &amp;json_handle, const std::string &amp;errata_json)</argsstring>
        <name>load_from_config</name>
        <param>
          <type><ref refid="db/d7e/cudnn__frontend__Errata_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>json_handle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>errata_json</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" line="40" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" bodystart="40" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a91f2627793be5d51db9b1473275d803d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool cudnn_frontend::check_rule</definition>
        <argsstring>(const json &amp;json_handle, const std::string &amp;executionPlanTag, cudnnHandle_t handle, T fn)</argsstring>
        <name>check_rule</name>
        <param>
          <type>const <ref refid="db/d7e/cudnn__frontend__Errata_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>json_handle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>executionPlanTag</declname>
        </param>
        <param>
          <type>cudnnHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" line="52" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" bodystart="52" bodyend="83"/>
        <references refid="d9/dcc/classnlohmann_1_1basic__json_1a02c9bc4d0f33b7dec20b2798301d6971" compoundref="d5/db8/json_8hpp" startline="21558" endline="21561">nlohmann::basic_json&lt; ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType &gt;::contains</references>
        <references refid="d3/d9b/namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16" compoundref="d5/db8/json_8hpp" startline="25855" endline="25858">nlohmann::to_string</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d" compoundref="d5/db8/json_8hpp" startline="4061" endline="4069">nlohmann::detail::void</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a8f4ddfcd38f15524ff0a35e14d21664c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>static bool cudnn_frontend::check_errata</definition>
        <argsstring>(const json &amp;json_handle, const std::string &amp;executionPlanTag, cudnnHandle_t handle, T fn)</argsstring>
        <name>check_errata</name>
        <param>
          <type>const <ref refid="db/d7e/cudnn__frontend__Errata_8h_1ab701e3ac61a85b337ec5c1abaad6742d" kindref="member">json</ref> &amp;</type>
          <declname>json_handle</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>executionPlanTag</declname>
        </param>
        <param>
          <type>cudnnHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>T</type>
          <declname>fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" line="90" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Errata.h" bodystart="90" bodyend="103"/>
        <references refid="df/de1/namespacecudnn__frontend_1ac39691550c5659acffd2386354ed18c6" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="72" endline="75">getLogger</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a4d18e44a57e30f9bf29157f742ba9c65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void cudnn_frontend::filter</definition>
        <argsstring>(EngineConfigList &amp;from, EngineConfigList &amp;to, std::function&lt; bool(cudnnBackendDescriptor_t)&gt; filter_fn)</argsstring>
        <name>filter</name>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1a84a5f004bdf17747bf7cf45d6fc754cd" kindref="member">EngineConfigList</ref> &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1a84a5f004bdf17747bf7cf45d6fc754cd" kindref="member">EngineConfigList</ref> &amp;</type>
          <declname>to</declname>
        </param>
        <param>
          <type>std::function&lt; bool(cudnnBackendDescriptor_t)&gt;</type>
          <declname>filter_fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Filters.h" line="33" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Filters.h" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a75bb541476d93b039f5fd9f9d29242e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>cudnnBackendNumericalNote_t</type>
            <declname>NUMERIC_NOTE</declname>
            <defname>NUMERIC_NOTE</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool cudnn_frontend::hasNumericalNote</definition>
        <argsstring>(cudnnBackendDescriptor_t engine_config)</argsstring>
        <name>hasNumericalNote</name>
        <param>
          <type>cudnnBackendDescriptor_t</type>
          <declname>engine_config</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Filters.h" line="45" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Filters.h" bodystart="45" bodyend="68"/>
        <references refid="df/de1/namespacecudnn__frontend_1aee9c79eb8972c944de14ccd70bf5db43" compoundref="dc/d11/cudnn__backend__base_8h" startline="88" endline="90">make_shared_backend_pointer</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a55c20886fc567d350a36f84ead282af7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>CudnnFindSamplingTechnique</type>
            <declname>samplingTechnique</declname>
            <defname>samplingTechnique</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto cudnn_frontend::time_sorted_plan</definition>
        <argsstring>(cudnnHandle_t handle, executionPlans_t plans, VariantPack const &amp;variantPack) -&gt; executionPlans_t</argsstring>
        <name>time_sorted_plan</name>
        <param>
          <type>cudnnHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1a560644a5c1e6016c509a379ca6e03f05" kindref="member">executionPlans_t</ref></type>
          <declname>plans</declname>
        </param>
        <param>
          <type><ref refid="df/de1/namespacecudnn__frontend_1ad6ac8113b406ee2b6f20eff4dd2b4e01" kindref="member">VariantPack</ref> const &amp;</type>
          <declname>variantPack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sorts the execution plans by their run time. The run time of plan may not trivial and hence we run it multiple times till we get a stable value. We have an additional dry-run which helps stabilize the time further. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_find_plan.h" line="38" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_find_plan.h" bodystart="38" bodyend="103"/>
        <references refid="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3a903bfd2e4d1b8ab2a7197be752c618a6">CUDNN_FIND_SAMPLE_MEDIAN_OF_THREE</references>
        <references refid="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3ac8ab707d81df65503b6b0ecc67675158">CUDNN_FIND_SAMPLE_ONCE</references>
        <references refid="df/de1/namespacecudnn__frontend_1ab3748fa00b36beec790db7201fdd2ef3a8199dfa6701edb38f52a74d9e229b43d">CUDNN_FIND_SAMPLE_TILL_STABLE</references>
        <references refid="d7/d0d/group__ExecutionPlanQuery_1ga74f24a0cc255a72af695056c2f559af7" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="98" endline="100">cudnn_frontend::ExecutionPlan_v8::getExecutionTime</references>
        <references refid="df/de1/namespacecudnn__frontend_1ac39691550c5659acffd2386354ed18c6" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="72" endline="75">getLogger</references>
        <references refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" compoundref="df/d17/cudnn__frontend__utils_8h" startline="72" endline="98">to_string</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a387b9a5a9cfdb5290ff5729852714f0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::size_t</type>
            <declname>SIZE</declname>
            <defname>SIZE</defname>
          </param>
        </templateparamlist>
        <type><ref refid="df/de1/namespacecudnn__frontend_1a84a5f004bdf17747bf7cf45d6fc754cd" kindref="member">EngineConfigList</ref></type>
        <definition>EngineConfigList cudnn_frontend::get_heuristics_list</definition>
        <argsstring>(std::array&lt; cudnnBackendHeurMode_t, SIZE &gt; modes, OperationGraph_v8 &amp;opGraph, std::function&lt; bool(cudnnBackendDescriptor_t)&gt; filter_fn)</argsstring>
        <name>get_heuristics_list</name>
        <param>
          <type>std::array&lt; cudnnBackendHeurMode_t, SIZE &gt;</type>
          <declname>modes</declname>
        </param>
        <param>
          <type><ref refid="de/dd9/classcudnn__frontend_1_1OperationGraph__v8" kindref="compound">OperationGraph_v8</ref> &amp;</type>
          <declname>opGraph</declname>
        </param>
        <param>
          <type>std::function&lt; bool(cudnnBackendDescriptor_t)&gt;</type>
          <declname>filter_fn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Heuristics.h" line="228" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Heuristics.h" bodystart="228" bodyend="246"/>
        <references refid="db/ddb/classcudnn__frontend_1_1EngineHeuristics__v8_1a44df29e58afe4b8fdc894574eb5efb9e" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="49">cudnn_frontend::EngineHeuristics_v8::EngineHeuristicsBuilder_v8</references>
        <references refid="df/de1/namespacecudnn__frontend_1abcaf76bd6c7d8c59082fd53d2a8c897a" compoundref="de/d1e/cudnn__frontend__EngineConfigGenerator_8h" startline="106" endline="118">filter</references>
        <references refid="db/ddb/classcudnn__frontend_1_1EngineHeuristics__v8_1a71e7822002502874f6b2dfec4ede7e01" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="128">cudnn_frontend::EngineHeuristics_v8::mode</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d" compoundref="d5/db8/json_8hpp" startline="4061" endline="4069">nlohmann::detail::void</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a9f71d168e0b8ae9c8756fae01d2aff42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool &amp;</type>
        <definition>bool&amp; cudnn_frontend::isLoggingEnabled</definition>
        <argsstring>()</argsstring>
        <name>isLoggingEnabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" line="32" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" bodystart="32" bodyend="35"/>
        <referencedby refid="df/de1/namespacecudnn__frontend_1afb2964ae3e29ca3be70d42123e69873c" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="39" endline="47">getStream</referencedby>
        <referencedby refid="d0/d92/classcudnn__frontend_1_1ConditionalStreamer_1a7be351ca01c5d3d8425bfc9df99e339c" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="58" endline="61">cudnn_frontend::ConditionalStreamer::operator&lt;&lt;</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a2c3daf3c0a5c4d328ccd42d0a4ba6f13" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="79" endline="82">operator&lt;&lt;</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1afb2964ae3e29ca3be70d42123e69873c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; cudnn_frontend::getStream</definition>
        <argsstring>()</argsstring>
        <name>getStream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" line="39" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" bodystart="39" bodyend="47"/>
        <references refid="df/de1/namespacecudnn__frontend_1a9f71d168e0b8ae9c8756fae01d2aff42" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="32" endline="35">isLoggingEnabled</references>
        <referencedby refid="df/de1/namespacecudnn__frontend_1ac39691550c5659acffd2386354ed18c6" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="72" endline="75">getLogger</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1ac39691550c5659acffd2386354ed18c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d92/classcudnn__frontend_1_1ConditionalStreamer" kindref="compound">ConditionalStreamer</ref> &amp;</type>
        <definition>ConditionalStreamer&amp; cudnn_frontend::getLogger</definition>
        <argsstring>()</argsstring>
        <name>getLogger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" line="72" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" bodystart="72" bodyend="75"/>
        <references refid="df/de1/namespacecudnn__frontend_1afb2964ae3e29ca3be70d42123e69873c" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="39" endline="47">getStream</references>
        <referencedby refid="dc/d6e/classcudnn__frontend_1_1ExecutionPlanCache__v1_1a0a60f67637646017b056301c3d1424db" compoundref="d9/dd3/cudnn__frontend__ExecutionPlanCache_8h" startline="108" endline="113">cudnn_frontend::ExecutionPlanCache_v1::add_plan_to_cache</referencedby>
        <referencedby refid="de/d00/classcudnn__frontend_1_1MatMulDescBuilder__v8_1addc153acf5600781659a1a2ba891e59c" compoundref="d6/d32/cudnn__frontend__MatMulDesc_8h" startline="93" endline="124">cudnn_frontend::MatMulDescBuilder_v8::build</referencedby>
        <referencedby refid="d2/da0/classcudnn__frontend_1_1ReductionDescBuilder__v8_1a84355923606ae86f66264fbcc5c305ad" compoundref="db/da7/cudnn__frontend__ReductionDesc_8h" startline="101" endline="147">cudnn_frontend::ReductionDescBuilder_v8::build</referencedby>
        <referencedby refid="d4/dce/classcudnn__frontend_1_1VariantPackBuilder__v8_1abf794751941aa252c19e1879306375d3" compoundref="df/dc0/cudnn__frontend__VariantPack_8h" startline="126" endline="183">cudnn_frontend::VariantPackBuilder_v8::build</referencedby>
        <referencedby refid="d9/df1/classcudnn__frontend_1_1EngineFallbackListBuilder__v8_1aae1a36ace3278dbedcf0d743a7744d98" compoundref="df/d3e/cudnn__frontend__EngineFallbackList_8h" startline="144" endline="171">cudnn_frontend::EngineFallbackListBuilder_v8::build</referencedby>
        <referencedby refid="d4/d39/classcudnn__frontend_1_1OperationGraphBuilder__v8_1ac78945f424f254f0060d4c2e1184cf1f" compoundref="db/d7d/cudnn__frontend__OperationGraph_8h" startline="157" endline="228">cudnn_frontend::OperationGraphBuilder_v8::build</referencedby>
        <referencedby refid="d1/d28/classcudnn__frontend_1_1EngineHeuristicsBuilder__v8_1ab3ff1b538521fdea588d8ac155f6e88c" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="161" endline="213">cudnn_frontend::EngineHeuristicsBuilder_v8::build</referencedby>
        <referencedby refid="dd/d72/classcudnn__frontend_1_1EngineConfigBuilder__v8_1a639e1514ea8f283720e49fc18d7ad673" compoundref="d6/d67/cudnn__frontend__EngineConfig_8h" startline="164" endline="227">cudnn_frontend::EngineConfigBuilder_v8::build</referencedby>
        <referencedby refid="db/de1/classcudnn__frontend_1_1ConvDescBuilder__v8_1a01f709a3efafaca70de6565817c43beb" compoundref="d1/de7/cudnn__frontend__ConvDesc_8h" startline="198" endline="331">cudnn_frontend::ConvDescBuilder_v8::build</referencedby>
        <referencedby refid="db/dae/classcudnn__frontend_1_1TensorBuilder__v8_1a32876941f964b3fad2d123b9081b0af7" compoundref="d3/d98/cudnn__frontend__Tensor_8h" startline="207" endline="386">cudnn_frontend::TensorBuilder_v8::build</referencedby>
        <referencedby refid="d5/d02/classcudnn__frontend_1_1PointWiseDescBuilder__v8_1a5de642e4141705f8e06c4bf566f1d332" compoundref="da/d5f/cudnn__frontend__PointWiseDesc_8h" startline="225" endline="377">cudnn_frontend::PointWiseDescBuilder_v8::build</referencedby>
        <referencedby refid="d9/dfd/classcudnn__frontend_1_1EngineBuilder__v8_1a010b99c39d63121be78ec847fff433f8" compoundref="de/d6d/cudnn__frontend__Engine_8h" startline="275" endline="334">cudnn_frontend::EngineBuilder_v8::build</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga5ff39f2019a5a3fe8062bf887707877c" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="298" endline="383">cudnn_frontend::ExecutionPlanBuilder_v8::build</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1aa0df558c603d8316dd3eb2d5bfd67c9d" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1332" endline="1380">cudnn_frontend::OperationBuilder_v8::build</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1ab8fd5d1352ff6cb696d506aeb6fc1b7e" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="556" endline="652">cudnn_frontend::OperationBuilder_v8::build_conv_backward_data</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1a0af3ff2c8ebeff83787ea0c3da857719" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="655" endline="750">cudnn_frontend::OperationBuilder_v8::build_conv_backward_filter</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1ad53afe4cef488fb62bcdf1af8bf2bb0f" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="753" endline="843">cudnn_frontend::OperationBuilder_v8::build_conv_forward</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a8f4ddfcd38f15524ff0a35e14d21664c" compoundref="db/d7e/cudnn__frontend__Errata_8h" startline="90" endline="103">check_errata</referencedby>
        <referencedby refid="dc/da3/classcudnn__frontend_1_1EngineConfigGenerator_1a8a43bb0f3643de138921a3a6c2908f45" compoundref="d2/d3b/cudnn__frontend__get__plan_8h" startline="30" endline="47">cudnn_frontend::EngineConfigGenerator::cudnnGetPlan</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1abcaf76bd6c7d8c59082fd53d2a8c897a" compoundref="de/d1e/cudnn__frontend__EngineConfigGenerator_8h" startline="106" endline="118">filter</referencedby>
        <referencedby refid="dc/da3/classcudnn__frontend_1_1EngineConfigGenerator_1a4b07b958f03daf033c30b9182fee372b" compoundref="de/d1e/cudnn__frontend__EngineConfigGenerator_8h" startline="59" endline="69">cudnn_frontend::EngineConfigGenerator::generate_engine_config</referencedby>
        <referencedby refid="dc/d6e/classcudnn__frontend_1_1ExecutionPlanCache__v1_1a86e9eeaddb1da051c26f386469a3e293" compoundref="d9/dd3/cudnn__frontend__ExecutionPlanCache_8h" startline="124" endline="138">cudnn_frontend::ExecutionPlanCache_v1::get_plan_from_cache</referencedby>
        <referencedby refid="da/df5/classcudnn__frontend_1_1ExecutionPlanCache__v2_1a75f65c7d922d206acf28d88bff53e4fe" compoundref="d9/dd3/cudnn__frontend__ExecutionPlanCache_8h" startline="150" endline="167">cudnn_frontend::ExecutionPlanCache_v2::is_fastest_plan_stable</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a55c20886fc567d350a36f84ead282af7" compoundref="d3/d6b/cudnn__frontend__find__plan_8h" startline="38" endline="103">time_sorted_plan</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a2c3daf3c0a5c4d328ccd42d0a4ba6f13" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>static std::ostream&amp; cudnn_frontend::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const BackendDescriptor &amp;desc)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor" kindref="compound">BackendDescriptor</ref> &amp;</type>
          <declname>desc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" line="78" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Logging.h" bodystart="79" bodyend="82"/>
        <references refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1ab652fb3e9a58092fbb137b0e959a9478">cudnn_frontend::BackendDescriptor::describe</references>
        <references refid="df/de1/namespacecudnn__frontend_1a9f71d168e0b8ae9c8756fae01d2aff42" compoundref="d8/dc4/cudnn__frontend__Logging_8h" startline="32" endline="35">isLoggingEnabled</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a5db7b16691678ccc7926338faf2023af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>cudnnStatus_t</type>
        <definition>static cudnnStatus_t cudnn_frontend::cudnnReorderFilterAndBiasInt8x32</definition>
        <argsstring>(cudnnHandle_t handle, const Tensor_v8 &amp;tensor, const ConvDesc_v8 &amp;conv_desc, void *dev_filter_ptr, void *reordered_filter_ptr, void *dev_bias_ptr, void *reordered_bias_ptr)</argsstring>
        <name>cudnnReorderFilterAndBiasInt8x32</name>
        <param>
          <type>cudnnHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>const <ref refid="d6/da7/classcudnn__frontend_1_1Tensor__v8" kindref="compound">Tensor_v8</ref> &amp;</type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="d6/d73/classcudnn__frontend_1_1ConvDesc__v8" kindref="compound">ConvDesc_v8</ref> &amp;</type>
          <declname>conv_desc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dev_filter_ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>reordered_filter_ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>dev_bias_ptr</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>reordered_bias_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Reorder_Tensor.h" line="39" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_Reorder_Tensor.h" bodystart="39" bodyend="92"/>
        <references refid="d6/da7/classcudnn__frontend_1_1Tensor__v8_1abd8b2029dd25fee10cee12c8552da96b" compoundref="d3/d98/cudnn__frontend__Tensor_8h" startline="95" endline="97">cudnn_frontend::Tensor_v8::getDimArray</references>
        <references refid="d6/da7/classcudnn__frontend_1_1Tensor__v8_1adc7efe51d66614f5fa06c2d0690bd474" compoundref="d3/d98/cudnn__frontend__Tensor_8h" startline="90" endline="92">cudnn_frontend::Tensor_v8::getDimensionCount</references>
        <references refid="d6/d73/classcudnn__frontend_1_1ConvDesc__v8_1ac964fa8d073d71590a775a878b96a9bc" compoundref="d1/de7/cudnn__frontend__ConvDesc_8h" startline="100" endline="102">cudnn_frontend::ConvDesc_v8::getDimensionCount</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a1a2eb74b7a3dc6b779d5af6135360590" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void cudnn_frontend::throw_if</definition>
        <argsstring>(std::function&lt; bool()&gt; expr, const char *message, cudnnStatus_t status)</argsstring>
        <name>throw_if</name>
        <param>
          <type>std::function&lt; bool()&gt;</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>cudnnStatus_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="55" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="55" bodyend="61"/>
        <references refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" compoundref="df/d17/cudnn__frontend__utils_8h" startline="39" endline="41">cudnn_frontend::cudnnException::cudnnException</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a389a2f97148e6cc35a008ac344f3f1a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void cudnn_frontend::throw_if</definition>
        <argsstring>(bool expr, const char *message, cudnnStatus_t status)</argsstring>
        <name>throw_if</name>
        <param>
          <type>bool</type>
          <declname>expr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <param>
          <type>cudnnStatus_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="63" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="63" bodyend="69"/>
        <references refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" compoundref="df/d17/cudnn__frontend__utils_8h" startline="39" endline="41">cudnn_frontend::cudnnException::cudnnException</references>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string cudnn_frontend::to_string</definition>
        <argsstring>(cudnnDataType_t type)</argsstring>
        <name>to_string</name>
        <param>
          <type>cudnnDataType_t</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="72" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="72" bodyend="98"/>
        <referencedby refid="dc/da3/classcudnn__frontend_1_1EngineConfigGenerator_1a8a43bb0f3643de138921a3a6c2908f45" compoundref="d2/d3b/cudnn__frontend__get__plan_8h" startline="30" endline="47">cudnn_frontend::EngineConfigGenerator::cudnnGetPlan</referencedby>
        <referencedby refid="d6/da7/classcudnn__frontend_1_1Tensor__v8_1a79cc1a752e6df2001b853f8c189b1f1f" compoundref="d3/d98/cudnn__frontend__Tensor_8h" startline="56" endline="78">cudnn_frontend::Tensor_v8::describe</referencedby>
        <referencedby refid="d6/d73/classcudnn__frontend_1_1ConvDesc__v8_1a0d36a97abb2d36a0148ce8e8833baff8" compoundref="d1/de7/cudnn__frontend__ConvDesc_8h" startline="58" endline="86">cudnn_frontend::ConvDesc_v8::describe</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a011f392961f07ab6de46a080e9a652a2" compoundref="df/d17/cudnn__frontend__utils_8h" startline="138" endline="147">set_error_and_throw_exception</referencedby>
        <referencedby refid="df/de1/namespacecudnn__frontend_1a55c20886fc567d350a36f84ead282af7" compoundref="d3/d6b/cudnn__frontend__find__plan_8h" startline="38" endline="103">time_sorted_plan</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a93aeab4c15483b9522191fb33c9dfe30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string cudnn_frontend::to_string</definition>
        <argsstring>(cudnnStatus_t status)</argsstring>
        <name>to_string</name>
        <param>
          <type>cudnnStatus_t</type>
          <declname>status</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="101" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="101" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="df/de1/namespacecudnn__frontend_1a011f392961f07ab6de46a080e9a652a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void cudnn_frontend::set_error_and_throw_exception</definition>
        <argsstring>(BackendDescriptor const *desc, cudnnStatus_t status, const char *message)</argsstring>
        <name>set_error_and_throw_exception</name>
        <param>
          <type><ref refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor" kindref="compound">BackendDescriptor</ref> const *</type>
          <declname>desc</declname>
        </param>
        <param>
          <type>cudnnStatus_t</type>
          <declname>status</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" line="138" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h" bodystart="138" bodyend="147"/>
        <references refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" compoundref="df/d17/cudnn__frontend__utils_8h" startline="39" endline="41">cudnn_frontend::cudnnException::cudnnException</references>
        <references refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1a1748a5c560905314930c37b2ed1a54d2" compoundref="dc/d11/cudnn__backend__base_8h" startline="126" endline="128">cudnn_frontend::BackendDescriptor::set_error</references>
        <references refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1a3ef02443f20b90223baf5f1922505eab" compoundref="dc/d11/cudnn__backend__base_8h" startline="120" endline="122">cudnn_frontend::BackendDescriptor::set_status</references>
        <references refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" compoundref="df/d17/cudnn__frontend__utils_8h" startline="72" endline="98">to_string</references>
        <referencedby refid="de/d00/classcudnn__frontend_1_1MatMulDescBuilder__v8_1addc153acf5600781659a1a2ba891e59c" compoundref="d6/d32/cudnn__frontend__MatMulDesc_8h" startline="93" endline="124">cudnn_frontend::MatMulDescBuilder_v8::build</referencedby>
        <referencedby refid="d2/da0/classcudnn__frontend_1_1ReductionDescBuilder__v8_1a84355923606ae86f66264fbcc5c305ad" compoundref="db/da7/cudnn__frontend__ReductionDesc_8h" startline="101" endline="147">cudnn_frontend::ReductionDescBuilder_v8::build</referencedby>
        <referencedby refid="d4/dce/classcudnn__frontend_1_1VariantPackBuilder__v8_1abf794751941aa252c19e1879306375d3" compoundref="df/dc0/cudnn__frontend__VariantPack_8h" startline="126" endline="183">cudnn_frontend::VariantPackBuilder_v8::build</referencedby>
        <referencedby refid="d9/df1/classcudnn__frontend_1_1EngineFallbackListBuilder__v8_1aae1a36ace3278dbedcf0d743a7744d98" compoundref="df/d3e/cudnn__frontend__EngineFallbackList_8h" startline="144" endline="171">cudnn_frontend::EngineFallbackListBuilder_v8::build</referencedby>
        <referencedby refid="d4/d39/classcudnn__frontend_1_1OperationGraphBuilder__v8_1ac78945f424f254f0060d4c2e1184cf1f" compoundref="db/d7d/cudnn__frontend__OperationGraph_8h" startline="157" endline="228">cudnn_frontend::OperationGraphBuilder_v8::build</referencedby>
        <referencedby refid="d1/d28/classcudnn__frontend_1_1EngineHeuristicsBuilder__v8_1ab3ff1b538521fdea588d8ac155f6e88c" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="161" endline="213">cudnn_frontend::EngineHeuristicsBuilder_v8::build</referencedby>
        <referencedby refid="dd/d72/classcudnn__frontend_1_1EngineConfigBuilder__v8_1a639e1514ea8f283720e49fc18d7ad673" compoundref="d6/d67/cudnn__frontend__EngineConfig_8h" startline="164" endline="227">cudnn_frontend::EngineConfigBuilder_v8::build</referencedby>
        <referencedby refid="db/de1/classcudnn__frontend_1_1ConvDescBuilder__v8_1a01f709a3efafaca70de6565817c43beb" compoundref="d1/de7/cudnn__frontend__ConvDesc_8h" startline="198" endline="331">cudnn_frontend::ConvDescBuilder_v8::build</referencedby>
        <referencedby refid="db/dae/classcudnn__frontend_1_1TensorBuilder__v8_1a32876941f964b3fad2d123b9081b0af7" compoundref="d3/d98/cudnn__frontend__Tensor_8h" startline="207" endline="386">cudnn_frontend::TensorBuilder_v8::build</referencedby>
        <referencedby refid="d5/d02/classcudnn__frontend_1_1PointWiseDescBuilder__v8_1a5de642e4141705f8e06c4bf566f1d332" compoundref="da/d5f/cudnn__frontend__PointWiseDesc_8h" startline="225" endline="377">cudnn_frontend::PointWiseDescBuilder_v8::build</referencedby>
        <referencedby refid="d9/dfd/classcudnn__frontend_1_1EngineBuilder__v8_1a010b99c39d63121be78ec847fff433f8" compoundref="de/d6d/cudnn__frontend__Engine_8h" startline="275" endline="334">cudnn_frontend::EngineBuilder_v8::build</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga5ff39f2019a5a3fe8062bf887707877c" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="298" endline="383">cudnn_frontend::ExecutionPlanBuilder_v8::build</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1aa0df558c603d8316dd3eb2d5bfd67c9d" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1332" endline="1380">cudnn_frontend::OperationBuilder_v8::build</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1ab8fd5d1352ff6cb696d506aeb6fc1b7e" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="556" endline="652">cudnn_frontend::OperationBuilder_v8::build_conv_backward_data</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1a0af3ff2c8ebeff83787ea0c3da857719" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="655" endline="750">cudnn_frontend::OperationBuilder_v8::build_conv_backward_filter</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1ad53afe4cef488fb62bcdf1af8bf2bb0f" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="753" endline="843">cudnn_frontend::OperationBuilder_v8::build_conv_forward</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1acea72d827ce582feea5ed490dd2371dd" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="240" endline="297">cudnn_frontend::OperationBuilder_v8::build_matmul_op</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1a23ab5e17f7f515edce17bc43628b753b" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="300" endline="553">cudnn_frontend::OperationBuilder_v8::build_pointwise_op</referencedby>
        <referencedby refid="d1/d29/classcudnn__frontend_1_1OperationBuilder__v8_1afe84b590489e84066faa892fe3f52d07" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="184" endline="237">cudnn_frontend::OperationBuilder_v8::build_reduction_op</referencedby>
        <referencedby refid="dc/d3c/classcudnn__frontend_1_1Engine__v8_1a0e6d7c12c261ad6c2f08e1249397b696" compoundref="de/d6d/cudnn__frontend__Engine_8h" startline="122" endline="162">cudnn_frontend::Engine_v8::buildKnobs</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga093a562caa7f8a906a362d9f70496020" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="152" endline="226">cudnn_frontend::ExecutionPlan_v8::buildTag</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1gafec2d06137cf97fef71d5ae17f178ce3" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="229" endline="246">cudnn_frontend::ExecutionPlan_v8::computeWorkSpaceSize</referencedby>
        <referencedby refid="dc/d3c/classcudnn__frontend_1_1Engine__v8_1a7609e82ac3dc04b67e9e73beb0f7cdae" compoundref="de/d6d/cudnn__frontend__Engine_8h" startline="174" endline="207">cudnn_frontend::Engine_v8::Engine_v8</referencedby>
        <referencedby refid="df/d83/classcudnn__frontend_1_1EngineConfig__v8_1ab761cb8a8a38495e913395fa872afb3e" compoundref="d6/d67/cudnn__frontend__EngineConfig_8h" startline="76" endline="89">cudnn_frontend::EngineConfig_v8::EngineConfig_v8</referencedby>
        <referencedby refid="d7/d0d/group__ExecutionPlanQuery_1ga7305ab3de5d0790c77492e47cbdbb593" compoundref="d6/d51/cudnn__frontend__ExecutionPlan_8h" startline="119" endline="149">cudnn_frontend::ExecutionPlan_v8::fetchNotes</referencedby>
        <referencedby refid="d6/d46/group__EngineHeuristicsQuery_1ga1171cb5ce50baf0fab19fc458d4565b5" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="69" endline="99">cudnn_frontend::EngineHeuristics_v8::getEngineConfig</referencedby>
        <referencedby refid="d6/d46/group__EngineHeuristicsQuery_1ga10121605fc82ed225537210825fa3836" compoundref="db/d66/cudnn__frontend__Heuristics_8h" startline="103" endline="119">cudnn_frontend::EngineHeuristics_v8::getEngineConfigCount</referencedby>
        <referencedby refid="d1/df7/group__OperationGraphQuery_1ga7a7a8d03f5a3aa54f14b83be4abe2a26" compoundref="db/d7d/cudnn__frontend__OperationGraph_8h" startline="74" endline="89">cudnn_frontend::OperationGraph_v8::getEngineCount</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1ga095c52c8f1b01ebb224265f9000195c0" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1161" endline="1170">cudnn_frontend::OperationBuilder_v8::setaMatDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1ga17475846760b10ffdfa536cd92a5b135" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1075" endline="1084">cudnn_frontend::OperationBuilder_v8::setbDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1gaa8eed29a0181e044ea0263ba655127ec" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1172" endline="1181">cudnn_frontend::OperationBuilder_v8::setbMatDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1gaa82e018b6a9d514ad912b922f43adad2" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1141" endline="1159">cudnn_frontend::OperationBuilder_v8::setcDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1gaaf9d7cbc65c7c7526a6f15d4ad2952fa" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1183" endline="1192">cudnn_frontend::OperationBuilder_v8::setcMatDesc</referencedby>
        <referencedby refid="d2/dbb/group__EngineConfigBuilder__v8_1ga9673b31268901dfcb97896958687a42a" compoundref="d6/d67/cudnn__frontend__EngineConfig_8h" startline="112" endline="158">cudnn_frontend::EngineConfigBuilder_v8::setEngine</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1ga3ca1f62832f998566c1b07b4b3c71db4" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1194" endline="1203">cudnn_frontend::OperationBuilder_v8::setmatmulDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1gae6b06877b2e675b2a390f0b122100669" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1216" endline="1278">cudnn_frontend::OperationBuilder_v8::setpwDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1ga904279a29c2c5c949a0e487dd573ae0a" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1205" endline="1214">cudnn_frontend::OperationBuilder_v8::setreductionDesc</referencedby>
        <referencedby refid="d3/d92/group__OperationBuilder__v8_1ga80466e517e980ba4953e085b3d4e3498" compoundref="da/d5a/cudnn__frontend__Operation_8h" startline="1094" endline="1106">cudnn_frontend::OperationBuilder_v8::setwDesc</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Execution Plan Caching: Goal is to auto-tune once and then save the best auto-tuned result for a problem for later use. For every unique Operation Graph (denoted by a string) we have a set of plans identified by a feature vector. The feature vector could be Tensor dimension/data_type and so on. Multiple operation Graph can share a feature vector type but may have different Execution Plan(s). The v1 cache has the following format. It is the reponsibility of the user to query the correct cache for the given device/operation graph combination. </para>    </detaileddescription>
    <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_backend_base.h" line="29" column="1"/>
  </compounddef>
</doxygen>
