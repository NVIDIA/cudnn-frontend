<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="df/d17/cudnn__frontend__utils_8h" kind="file" language="C++">
    <compoundname>cudnn_frontend_utils.h</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="dc/d11/cudnn__backend__base_8h" local="yes">cudnn_backend_base.h</includes>
    <includes refid="d8/dc4/cudnn__frontend__Logging_8h" local="yes">cudnn_frontend_Logging.h</includes>
    <includedby refid="d1/de7/cudnn__frontend__ConvDesc_8h" local="yes">cudnn_frontend_ConvDesc.h</includedby>
    <includedby refid="da/d5f/cudnn__frontend__PointWiseDesc_8h" local="yes">cudnn_frontend_PointWiseDesc.h</includedby>
    <includedby refid="d6/d32/cudnn__frontend__MatMulDesc_8h" local="yes">cudnn_frontend_MatMulDesc.h</includedby>
    <includedby refid="db/da7/cudnn__frontend__ReductionDesc_8h" local="yes">cudnn_frontend_ReductionDesc.h</includedby>
    <includedby refid="d3/d98/cudnn__frontend__Tensor_8h" local="yes">cudnn_frontend_Tensor.h</includedby>
    <includedby refid="da/d5a/cudnn__frontend__Operation_8h" local="yes">cudnn_frontend_Operation.h</includedby>
    <includedby refid="db/d7d/cudnn__frontend__OperationGraph_8h" local="yes">cudnn_frontend_OperationGraph.h</includedby>
    <includedby refid="de/d6d/cudnn__frontend__Engine_8h" local="yes">cudnn_frontend_Engine.h</includedby>
    <includedby refid="d6/d67/cudnn__frontend__EngineConfig_8h" local="yes">cudnn_frontend_EngineConfig.h</includedby>
    <includedby refid="db/d66/cudnn__frontend__Heuristics_8h" local="yes">cudnn_frontend_Heuristics.h</includedby>
    <includedby refid="d6/d51/cudnn__frontend__ExecutionPlan_8h" local="yes">cudnn_frontend_ExecutionPlan.h</includedby>
    <includedby refid="df/dc0/cudnn__frontend__VariantPack_8h" local="yes">cudnn_frontend_VariantPack.h</includedby>
    <incdepgraph>
      <node id="810">
        <label>cudnn.h</label>
      </node>
      <node id="806">
        <label>string</label>
      </node>
      <node id="811">
        <label>cudnn_frontend_Logging.h</label>
        <link refid="d8/dc4/cudnn__frontend__Logging_8h"/>
        <childnode refid="812" relation="include">
        </childnode>
        <childnode refid="813" relation="include">
        </childnode>
        <childnode refid="814" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
      </node>
      <node id="805">
        <label>exception</label>
      </node>
      <node id="813">
        <label>fstream</label>
      </node>
      <node id="809">
        <label>ostream</label>
      </node>
      <node id="807">
        <label>vector</label>
      </node>
      <node id="812">
        <label>iostream</label>
      </node>
      <node id="814">
        <label>cstring</label>
      </node>
      <node id="804">
        <label>cudnn_frontend_utils.h</label>
        <link refid="df/d17/cudnn__frontend__utils_8h"/>
        <childnode refid="805" relation="include">
        </childnode>
        <childnode refid="806" relation="include">
        </childnode>
        <childnode refid="807" relation="include">
        </childnode>
        <childnode refid="808" relation="include">
        </childnode>
        <childnode refid="811" relation="include">
        </childnode>
      </node>
      <node id="808">
        <label>cudnn_backend_base.h</label>
        <link refid="dc/d11/cudnn__backend__base_8h"/>
        <childnode refid="809" relation="include">
        </childnode>
        <childnode refid="810" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="833">
        <label>cudnn_frontend_VariantPack.h</label>
        <link refid="df/dc0/cudnn__frontend__VariantPack_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="824">
        <label>cudnn_frontend_Engine.h</label>
        <link refid="de/d6d/cudnn__frontend__Engine_8h"/>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="826" relation="include">
        </childnode>
      </node>
      <node id="825">
        <label>cudnn_frontend_EngineConfig.h</label>
        <link refid="d6/d67/cudnn__frontend__EngineConfig_8h"/>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="830">
        <label>cudnn_frontend_MatMulDesc.h</label>
        <link refid="d6/d32/cudnn__frontend__MatMulDesc_8h"/>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="823">
        <label>cudnn_frontend_Heuristics.h</label>
        <link refid="db/d66/cudnn__frontend__Heuristics_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="829">
        <label>cudnn_frontend_PointWiseDesc.h</label>
        <link refid="da/d5f/cudnn__frontend__PointWiseDesc_8h"/>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="820">
        <label>cudnn_frontend_get_plan.h</label>
        <link refid="d2/d3b/cudnn__frontend__get__plan_8h"/>
      </node>
      <node id="832">
        <label>cudnn_frontend_Tensor.h</label>
        <link refid="d3/d98/cudnn__frontend__Tensor_8h"/>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
      </node>
      <node id="818">
        <label>cudnn_frontend_EngineConfigGenerator.h</label>
        <link refid="de/d1e/cudnn__frontend__EngineConfigGenerator_8h"/>
        <childnode refid="819" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
      </node>
      <node id="827">
        <label>cudnn_frontend_ExecutionPlanCache.h</label>
        <link refid="d9/dd3/cudnn__frontend__ExecutionPlanCache_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="821">
        <label>cudnn_frontend_Operation.h</label>
        <link refid="da/d5a/cudnn__frontend__Operation_8h"/>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="828">
        <label>cudnn_frontend_Reorder_Tensor.h</label>
        <link refid="d9/da8/cudnn__frontend__Reorder__Tensor_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
      </node>
      <node id="826">
        <label>cudnn_frontend_ExecutionPlan.h</label>
        <link refid="d6/d51/cudnn__frontend__ExecutionPlan_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
      <node id="816">
        <label>cudnn_frontend_ConvDesc.h</label>
        <link refid="d1/de7/cudnn__frontend__ConvDesc_8h"/>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
      </node>
      <node id="822">
        <label>cudnn_frontend_OperationGraph.h</label>
        <link refid="db/d7d/cudnn__frontend__OperationGraph_8h"/>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
      </node>
      <node id="817">
        <label>cudnn_frontend.h</label>
        <link refid="de/d0c/cudnn__frontend_8h"/>
        <childnode refid="818" relation="include">
        </childnode>
      </node>
      <node id="819">
        <label>cudnn_frontend_find_plan.h</label>
        <link refid="d3/d6b/cudnn__frontend__find__plan_8h"/>
      </node>
      <node id="831">
        <label>cudnn_frontend_ReductionDesc.h</label>
        <link refid="db/da7/cudnn__frontend__ReductionDesc_8h"/>
        <childnode refid="821" relation="include">
        </childnode>
      </node>
      <node id="815">
        <label>cudnn_frontend_utils.h</label>
        <link refid="df/d17/cudnn__frontend__utils_8h"/>
        <childnode refid="816" relation="include">
        </childnode>
        <childnode refid="829" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d9/dca/classcudnn__frontend_1_1cudnnException" prot="public">cudnn_frontend::cudnnException</innerclass>
    <innernamespace refid="df/de1/namespacecudnn__frontend">cudnn_frontend</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2021,<sp/>NVIDIA<sp/>CORPORATION.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d11/cudnn__backend__base_8h" kindref="compound">cudnn_backend_base.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d8/dc4/cudnn__frontend__Logging_8h" kindref="compound">cudnn_frontend_Logging.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend" kindref="compound">cudnn_frontend</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="df/de1/namespacecudnn__frontend_1a360ee0c724a479660a6bd0815af46ac1" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="df/de1/namespacecudnn__frontend_1a360ee0c724a479660a6bd0815af46ac1" kindref="member">feature_vector_t</ref><sp/>=<sp/>std::vector&lt;int64_t&gt;;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NV_CUDNN_DISABLE_EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d9/dca/classcudnn__frontend_1_1cudnnException" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException" kindref="compound">cudnnException</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::runtime_error<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="39" refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" kindref="member">cudnnException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/>cudnnStatus_t<sp/>status)<sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">()<sp/>:<sp/>std::runtime_error(message)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1af8ffe8ca23602e33a75020da77ee9754" kindref="member">error_status</ref><sp/>=<sp/>status;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="43" refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4f35e3466ff6ce0875631b810364364b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4f35e3466ff6ce0875631b810364364b" kindref="member">what</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::runtime_error::what();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46" refid="d9/dca/classcudnn__frontend_1_1cudnnException_1ae3ce73524dfea3c9472e8520b7fe2fc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cudnnStatus_t<sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1ae3ce73524dfea3c9472e8520b7fe2fc3" kindref="member">getCudnnStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1af8ffe8ca23602e33a75020da77ee9754" kindref="member">error_status</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="d9/dca/classcudnn__frontend_1_1cudnnException_1af8ffe8ca23602e33a75020da77ee9754" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cudnnStatus_t<sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1af8ffe8ca23602e33a75020da77ee9754" kindref="member">error_status</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="df/de1/namespacecudnn__frontend_1a1a2eb74b7a3dc6b779d5af6135360590" refkind="member"><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend_1a1a2eb74b7a3dc6b779d5af6135360590" kindref="member">throw_if</ref>(std::function&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">()&gt;<sp/>expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/>cudnnStatus_t<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expr())<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NV_CUDNN_DISABLE_EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" kindref="member">cudnnException</ref>(message,<sp/>status);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="df/de1/namespacecudnn__frontend_1a389a2f97148e6cc35a008ac344f3f1a5" refkind="member"><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend_1a1a2eb74b7a3dc6b779d5af6135360590" kindref="member">throw_if</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>expr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message,<sp/>cudnnStatus_t<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(expr)<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NV_CUDNN_DISABLE_EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" kindref="member">cudnnException</ref>(message,<sp/>status);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="72" refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" refkind="member"><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" kindref="member">to_string</ref>(cudnnDataType_t<sp/><ref refid="db/d0a/classstd_1_1conditional_1_1type" kindref="compound">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_FLOAT:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_FLOAT&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_DOUBLE:</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_DOUBLE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_HALF:</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_HALF&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_INT8:</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_INT8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_INT32:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_INT32&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_INT8x4:<sp/></highlight><highlight class="comment">//<sp/>x4<sp/>and<sp/>x32<sp/>are<sp/>replaced<sp/>by<sp/>vectorized<sp/>dimension<sp/>in<sp/>the<sp/>v8<sp/>API<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_INT8x4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_UINT8:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_UINT8&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_UINT8x4:<sp/></highlight><highlight class="comment">//<sp/>x4<sp/>and<sp/>x32<sp/>are<sp/>replaced<sp/>by<sp/>vectorized<sp/>dimension<sp/>in<sp/>the<sp/>v8<sp/>API<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_UINT8x4&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_INT8x32:<sp/></highlight><highlight class="comment">//<sp/>x4<sp/>and<sp/>x32<sp/>are<sp/>replaced<sp/>by<sp/>vectorized<sp/>dimension<sp/>in<sp/>the<sp/>v8<sp/>API<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_INT8x32&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_INT64:</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_INT64&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_DATA_BFLOAT16:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_DATA_BFLOAT16&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string</highlight></codeline>
<codeline lineno="101" refid="df/de1/namespacecudnn__frontend_1a93aeab4c15483b9522191fb33c9dfe30" refkind="member"><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" kindref="member">to_string</ref>(cudnnStatus_t<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(status)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_SUCCESS:</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_SUCCESS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_NOT_INITIALIZED:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_NOT_INITIALIZED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_ALLOC_FAILED:</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_ALLOC_FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_BAD_PARAM:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_BAD_PARAM&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_INTERNAL_ERROR:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_INTERNAL_ERROR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_INVALID_VALUE:</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_INVALID_VALUE&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_ARCH_MISMATCH:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_ARCH_MISMATCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_MAPPING_ERROR:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_MAPPING_ERROR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_EXECUTION_FAILED:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_EXECUTION_FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_NOT_SUPPORTED:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_NOT_SUPPORTED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_LICENSE_ERROR:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_LICENSE_ERROR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_RUNTIME_PREREQUISITE_MISSING&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_RUNTIME_IN_PROGRESS:</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_RUNTIME_IN_PROGRESS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_RUNTIME_FP_OVERFLOW:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_RUNTIME_FP_OVERFLOW&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>CUDNN_STATUS_VERSION_MISMATCH:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;CUDNN_STATUS_VERSION_MISMATCH&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="df/de1/namespacecudnn__frontend_1a011f392961f07ab6de46a080e9a652a2" refkind="member"><highlight class="normal"><ref refid="df/de1/namespacecudnn__frontend_1a011f392961f07ab6de46a080e9a652a2" kindref="member">set_error_and_throw_exception</ref>(<ref refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor" kindref="compound">BackendDescriptor</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*desc,<sp/>cudnnStatus_t<sp/>status,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc<sp/>!=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1a3ef02443f20b90223baf5f1922505eab" kindref="member">set_status</ref>(status);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="d6/d88/classcudnn__frontend_1_1BackendDescriptor_1a1748a5c560905314930c37b2ed1a54d2" kindref="member">set_error</ref>(message);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NV_CUDNN_DISABLE_EXCEPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/><ref refid="d9/dca/classcudnn__frontend_1_1cudnnException_1a4fe24bc811a1f1e3bb05e3c9086883dd" kindref="member">cudnnException</ref>(</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string(std::string(message)<sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>cudnn_status:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="df/de1/namespacecudnn__frontend_1a939cf4181f94bc235363cc485beb1ce8" kindref="member">to_string</ref>(status)).c_str(),<sp/>status);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/agopal/trees/cudnn-frontend/include/cudnn_frontend_utils.h"/>
  </compounddef>
</doxygen>
