<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d2/d67/classnlohmann_1_1detail_1_1out__of__range" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::out_of_range</compoundname>
    <basecompoundref refid="de/df2/classnlohmann_1_1detail_1_1exception" prot="public" virt="non-virtual">nlohmann::detail::exception</basecompoundref>
    <includes refid="d5/db8/json_8hpp" local="no">json.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1a238f1bda3b6c92b5970fbf9187ccd325" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BasicJsonType</type>
          </param>
        </templateparamlist>
        <type><ref refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref></type>
        <definition>static out_of_range nlohmann::detail::out_of_range::create</definition>
        <argsstring>(int id_, const std::string &amp;what_arg, const BasicJsonType &amp;context)</argsstring>
        <name>create</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const <ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21" kindref="member">std::string</ref> &amp;</type>
          <declname>what_arg</declname>
        </param>
        <param>
          <type>const BasicJsonType &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2964" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2964" bodyend="2968"/>
        <references refid="de/df2/classnlohmann_1_1detail_1_1exception_1aa353a7dba4fd179f7224b8a2a238a264" compoundref="d5/db8/json_8hpp" startline="2664" endline="2717">nlohmann::detail::exception::diagnostics</references>
        <references refid="d5/db8/json_8hpp_1a5338981b5ad9027c9e54b1c5597f4344" compoundref="d5/db8/json_8hpp" startline="1456">JSON_HEDLEY_NON_NULL</references>
        <references refid="de/df2/classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" compoundref="d5/db8/json_8hpp" startline="2658" endline="2661">nlohmann::detail::exception::name</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21">nlohmann::detail::string</references>
        <referencedby refid="da/de8/classnlohmann_1_1json__pointer_1ae28e4b79b9d4fac9e6dca29f47f946fa" compoundref="d5/db8/json_8hpp" startline="12420" endline="12461">nlohmann::json_pointer&lt; BasicJsonType &gt;::array_index</referencedby>
        <referencedby refid="d9/dcc/classnlohmann_1_1basic__json_1a52b18a5b7e68652c65b070900c438c6e" compoundref="d5/db8/json_8hpp" startline="20448" endline="20467">nlohmann::basic_json&lt; ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType &gt;::at</referencedby>
        <referencedby refid="da/de8/classnlohmann_1_1json__pointer_1a213bc67c32a30c68ac6bf06f5195d482" compoundref="d5/db8/json_8hpp" startline="12357" endline="12365">nlohmann::json_pointer&lt; BasicJsonType &gt;::back</referencedby>
        <referencedby refid="df/d1a/classnlohmann_1_1detail_1_1binary__writer_1a11637a023d22e57a7e7aff3f98b10f84" compoundref="d5/db8/json_8hpp" startline="14139" endline="14148">nlohmann::detail::binary_writer&lt; BasicJsonType, CharType &gt;::calc_bson_entry_header_size</referencedby>
        <referencedby refid="d9/dcc/classnlohmann_1_1basic__json_1a221b943d3228488c14225e55f726cc26" compoundref="d5/db8/json_8hpp" startline="21421" endline="21437">nlohmann::basic_json&lt; ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType &gt;::erase</referencedby>
        <referencedby refid="da/de8/classnlohmann_1_1json__pointer_1a366d68a67e40d86676d3bdb52e167294" compoundref="d5/db8/json_8hpp" startline="12616" endline="12650">nlohmann::json_pointer&lt; BasicJsonType &gt;::get_checked</referencedby>
        <referencedby refid="da/de8/classnlohmann_1_1json__pointer_1a577512ee6b7f030e8872b4d29fa5c3e5" compoundref="d5/db8/json_8hpp" startline="12557" endline="12608">nlohmann::json_pointer&lt; BasicJsonType &gt;::get_unchecked</referencedby>
        <referencedby refid="d9/dcc/classnlohmann_1_1basic__json_1adcc786998f220a5b3083ee8a37c4553e" compoundref="d5/db8/json_8hpp" startline="25343" endline="25605">nlohmann::basic_json&lt; ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType &gt;::patch</referencedby>
        <referencedby refid="da/de8/classnlohmann_1_1json__pointer_1a4b1ee4d511ca195bed896a3da47e264c" compoundref="d5/db8/json_8hpp" startline="12333" endline="12341">nlohmann::json_pointer&lt; BasicJsonType &gt;::pop_back</referencedby>
        <referencedby refid="df/d6b/classnlohmann_1_1detail_1_1parser_1a678fdebccc8ddd3242c67b6bce2f8f1a" compoundref="d5/db8/json_8hpp" startline="10828" endline="11099">nlohmann::detail::parser&lt; BasicJsonType, InputAdapterType &gt;::sax_parse_internal</referencedby>
        <referencedby refid="dc/d68/classnlohmann_1_1detail_1_1json__sax__dom__parser_1a056b895d011efaf48ea096c024aca0d4" compoundref="d5/db8/json_8hpp" startline="5954" endline="5964">nlohmann::detail::json_sax_dom_parser&lt; BasicJsonType &gt;::start_array</referencedby>
        <referencedby refid="d6/d69/classnlohmann_1_1detail_1_1json__sax__dom__callback__parser_1a5255b98ba8282e3625968f91cff9d3d0" compoundref="d5/db8/json_8hpp" startline="6174" endline="6189">nlohmann::detail::json_sax_dom_callback_parser&lt; BasicJsonType &gt;::start_array</referencedby>
        <referencedby refid="dc/d68/classnlohmann_1_1detail_1_1json__sax__dom__parser_1a9929b4cc92d471c49bd0a92802629f90" compoundref="d5/db8/json_8hpp" startline="5928" endline="5938">nlohmann::detail::json_sax_dom_parser&lt; BasicJsonType &gt;::start_object</referencedby>
        <referencedby refid="d6/d69/classnlohmann_1_1detail_1_1json__sax__dom__callback__parser_1a040e60243cc7c18a6078c6b83cdb4a81" compoundref="d5/db8/json_8hpp" startline="6103" endline="6119">nlohmann::detail::json_sax_dom_callback_parser&lt; BasicJsonType &gt;::start_object</referencedby>
        <referencedby refid="df/d1a/classnlohmann_1_1detail_1_1binary__writer_1ac274e3d7a803e7223bb1a4fcb7cd594c" compoundref="d5/db8/json_8hpp" startline="14253" endline="14270">nlohmann::detail::binary_writer&lt; BasicJsonType, CharType &gt;::write_bson_unsigned</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1ab5fe402019dba957558499502f0fd731" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::out_of_range::out_of_range</definition>
        <argsstring>(int id_, const char *what_arg)</argsstring>
        <name>out_of_range</name>
        <param>
          <type>int</type>
          <declname>id_</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>what_arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2972" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2972" bodyend="2972"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>exception indicating access out of the defined range </para>    </briefdescription>
    <detaileddescription>
<para>This exception is thrown in case a library function is called on an input parameter that exceeds the expected range, for instance in case of array indices or nonexisting object keys.</para><para>Exceptions have ids 4xx.</para><para><table rows="10" cols="3"><row>
<entry thead="yes"><para>name / id </para></entry><entry thead="yes"><para>example message </para></entry><entry thead="yes"><para>description  </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.401 </para></entry><entry thead="no"><para>array index 3 is out of range </para></entry><entry thead="no"><para>The provided array index <emphasis>i</emphasis> is larger than <emphasis>size-1</emphasis>. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.402 </para></entry><entry thead="no"><para>array index &apos;-&apos; (3) is out of range </para></entry><entry thead="no"><para>The special array index <computeroutput>-</computeroutput> in a JSON Pointer never describes a valid element of the array, but the index past the end. That is, it can only be used to add elements at this position, but not to read it. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.403 </para></entry><entry thead="no"><para>key &apos;foo&apos; not found </para></entry><entry thead="no"><para>The provided key was not found in the JSON object. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.404 </para></entry><entry thead="no"><para>unresolved reference token &apos;foo&apos; </para></entry><entry thead="no"><para>A reference token in a JSON Pointer could not be resolved. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.405 </para></entry><entry thead="no"><para>JSON pointer has no parent </para></entry><entry thead="no"><para>The JSON Patch operations &apos;remove&apos; and &apos;add&apos; can not be applied to the root element of the JSON value. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.406 </para></entry><entry thead="no"><para>number overflow parsing &apos;10E1000&apos; </para></entry><entry thead="no"><para>A parsed number could not be stored as without changing it to NaN or INF. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.407 </para></entry><entry thead="no"><para>number overflow serializing &apos;9223372036854775808&apos; </para></entry><entry thead="no"><para>UBJSON and BSON only support integer numbers up to 9223372036854775807. (until version 3.8.0) </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.408 </para></entry><entry thead="no"><para>excessive array size: 8658170730974374167 </para></entry><entry thead="no"><para>The size (following <computeroutput>#</computeroutput>) of an UBJSON array or object exceeds the maximal capacity. </para></entry></row>
<row>
<entry thead="no"><para>json.exception.out_of_range.409 </para></entry><entry thead="no"><para>BSON key cannot contain code point U+0000 (at byte 2) </para></entry><entry thead="no"><para>Key identifiers to be serialized to BSON cannot contain code point U+0000, since the key is stored as zero-terminated c-string </para></entry></row>
</table>
{The following code shows how an <computeroutput><ref refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref></computeroutput> exception can be caught.,<ref refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range" kindref="compound">out_of_range</ref>}</para><para><simplesect kind="see"><para>- <ref refid="de/df2/classnlohmann_1_1detail_1_1exception" kindref="compound">exception</ref> for the base class of the library exceptions </para></simplesect>
<simplesect kind="see"><para>- <ref refid="d5/d1a/classnlohmann_1_1detail_1_1parse__error" kindref="compound">parse_error</ref> for exceptions indicating a parse <ref refid="dc/df0/namespacenlohmann_1_1detail_1a58bb1ef1a9ad287a9cfaf1855784d9acacb5e100e5a9a3e7f6d1fd97512215282" kindref="member">error</ref> </para></simplesect>
<simplesect kind="see"><para>- <ref refid="d4/d5f/classnlohmann_1_1detail_1_1invalid__iterator" kindref="compound">invalid_iterator</ref> for exceptions indicating errors with iterators </para></simplesect>
<simplesect kind="see"><para>- <ref refid="da/d1c/classnlohmann_1_1detail_1_1type__error" kindref="compound">type_error</ref> for exceptions indicating executing a member function with a wrong type </para></simplesect>
<simplesect kind="see"><para>- <ref refid="d5/d1b/classnlohmann_1_1detail_1_1other__error" kindref="compound">other_error</ref> for exceptions indicating other library errors</para></simplesect>
<simplesect kind="since"><para>version 3.0.0 </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="941">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="942" relation="public-inheritance">
        </childnode>
      </node>
      <node id="943">
        <label>std::exception</label>
      </node>
      <node id="942">
        <label>nlohmann::detail::exception</label>
        <link refid="de/df2/classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="943" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="944">
        <label>nlohmann::detail::out_of_range</label>
        <link refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range"/>
        <childnode refid="945" relation="public-inheritance">
        </childnode>
      </node>
      <node id="947">
        <label>std::runtime_error</label>
        <childnode refid="946" relation="public-inheritance">
        </childnode>
      </node>
      <node id="948">
        <label>int</label>
      </node>
      <node id="946">
        <label>std::exception</label>
      </node>
      <node id="945">
        <label>nlohmann::detail::exception</label>
        <link refid="de/df2/classnlohmann_1_1detail_1_1exception"/>
        <childnode refid="946" relation="public-inheritance">
        </childnode>
        <childnode refid="947" relation="usage">
          <edgelabel>-m</edgelabel>
        </childnode>
        <childnode refid="948" relation="usage">
          <edgelabel>+id</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="2961" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="2960" bodyend="2973"/>
    <listofallmembers>
      <member refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1a238f1bda3b6c92b5970fbf9187ccd325" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>create</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1aa353a7dba4fd179f7224b8a2a238a264" prot="protected" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>diagnostics</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1ae323ad0d53bc724414c2233164e65657" prot="protected" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>exception</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1a0d4589a3fb54e81646d986c05efa3b9a" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>id</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1abf41a7e9178356314082284e6cfea278" prot="protected" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>name</name></member>
      <member refid="d2/d67/classnlohmann_1_1detail_1_1out__of__range_1ab5fe402019dba957558499502f0fd731" prot="private" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>out_of_range</name></member>
      <member refid="de/df2/classnlohmann_1_1detail_1_1exception_1a0672c25ecdf14d1a071d4d6478a65af0" prot="public" virt="non-virtual"><scope>nlohmann::detail::out_of_range</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
