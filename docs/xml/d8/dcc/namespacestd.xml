<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d8/dcc/namespacestd" kind="namespace" language="C++">
    <compoundname>std</compoundname>
    <innerclass refid="d7/d75/classstd_1_1allocator" prot="public">std::allocator</innerclass>
    <innerclass refid="d4/d04/classstd_1_1array" prot="public">std::array</innerclass>
    <innerclass refid="d3/d99/classstd_1_1auto__ptr" prot="public">std::auto_ptr</innerclass>
    <innerclass refid="db/de3/classstd_1_1bad__alloc" prot="public">std::bad_alloc</innerclass>
    <innerclass refid="da/dd3/classstd_1_1bad__cast" prot="public">std::bad_cast</innerclass>
    <innerclass refid="d0/d2f/classstd_1_1bad__exception" prot="public">std::bad_exception</innerclass>
    <innerclass refid="da/d54/classstd_1_1bad__typeid" prot="public">std::bad_typeid</innerclass>
    <innerclass refid="d1/dad/classstd_1_1basic__fstream" prot="public">std::basic_fstream</innerclass>
    <innerclass refid="d5/d6a/classstd_1_1basic__ifstream" prot="public">std::basic_ifstream</innerclass>
    <innerclass refid="d5/d73/classstd_1_1basic__ios" prot="public">std::basic_ios</innerclass>
    <innerclass refid="df/d9a/classstd_1_1basic__iostream" prot="public">std::basic_iostream</innerclass>
    <innerclass refid="d8/d33/classstd_1_1basic__istream" prot="public">std::basic_istream</innerclass>
    <innerclass refid="d0/d58/classstd_1_1basic__istringstream" prot="public">std::basic_istringstream</innerclass>
    <innerclass refid="d4/d64/classstd_1_1basic__ofstream" prot="public">std::basic_ofstream</innerclass>
    <innerclass refid="df/d57/classstd_1_1basic__ostream" prot="public">std::basic_ostream</innerclass>
    <innerclass refid="da/dc9/classstd_1_1basic__ostringstream" prot="public">std::basic_ostringstream</innerclass>
    <innerclass refid="d4/de8/classstd_1_1basic__string" prot="public">std::basic_string</innerclass>
    <innerclass refid="dd/d55/classstd_1_1basic__stringstream" prot="public">std::basic_stringstream</innerclass>
    <innerclass refid="d5/dd4/classstd_1_1bitset" prot="public">std::bitset</innerclass>
    <innerclass refid="d1/d9b/classstd_1_1complex" prot="public">std::complex</innerclass>
    <innerclass refid="dc/dbf/classstd_1_1deque" prot="public">std::deque</innerclass>
    <innerclass refid="d8/dd6/classstd_1_1domain__error" prot="public">std::domain_error</innerclass>
    <innerclass refid="d5/d5f/classstd_1_1error__category" prot="public">std::error_category</innerclass>
    <innerclass refid="d2/db5/classstd_1_1error__code" prot="public">std::error_code</innerclass>
    <innerclass refid="d6/dff/classstd_1_1error__condition" prot="public">std::error_condition</innerclass>
    <innerclass refid="d7/dc6/classstd_1_1exception" prot="public">std::exception</innerclass>
    <innerclass refid="dc/d78/classstd_1_1forward__list" prot="public">std::forward_list</innerclass>
    <innerclass refid="d1/d7a/classstd_1_1fstream" prot="public">std::fstream</innerclass>
    <innerclass refid="dd/d6b/structstd_1_1hash_3_01nlohmann_1_1json_01_4" prot="public">std::hash&lt; nlohmann::json &gt;</innerclass>
    <innerclass refid="d6/de4/classstd_1_1ifstream" prot="public">std::ifstream</innerclass>
    <innerclass refid="d1/d11/classstd_1_1invalid__argument" prot="public">std::invalid_argument</innerclass>
    <innerclass refid="d2/d53/classstd_1_1ios" prot="public">std::ios</innerclass>
    <innerclass refid="de/d54/classstd_1_1ios__base" prot="public">std::ios_base</innerclass>
    <innerclass refid="d8/d05/classstd_1_1istream" prot="public">std::istream</innerclass>
    <innerclass refid="db/d29/classstd_1_1istringstream" prot="public">std::istringstream</innerclass>
    <innerclass refid="d6/de6/classstd_1_1length__error" prot="public">std::length_error</innerclass>
    <innerclass refid="df/d4e/structstd_1_1less_3_1_1nlohmann_1_1detail_1_1value__t_01_4" prot="public">std::less&lt;::nlohmann::detail::value_t &gt;</innerclass>
    <innerclass refid="d4/dff/classstd_1_1list" prot="public">std::list</innerclass>
    <innerclass refid="d6/d2f/classstd_1_1logic__error" prot="public">std::logic_error</innerclass>
    <innerclass refid="d4/de8/classstd_1_1map" prot="public">std::map</innerclass>
    <innerclass refid="d3/dc6/classstd_1_1multimap" prot="public">std::multimap</innerclass>
    <innerclass refid="d6/d1e/classstd_1_1multiset" prot="public">std::multiset</innerclass>
    <innerclass refid="d0/db3/classstd_1_1ofstream" prot="public">std::ofstream</innerclass>
    <innerclass refid="da/d40/classstd_1_1ostream" prot="public">std::ostream</innerclass>
    <innerclass refid="d7/d24/classstd_1_1ostringstream" prot="public">std::ostringstream</innerclass>
    <innerclass refid="d7/d90/classstd_1_1out__of__range" prot="public">std::out_of_range</innerclass>
    <innerclass refid="d8/d1f/classstd_1_1overflow__error" prot="public">std::overflow_error</innerclass>
    <innerclass refid="d7/d54/classstd_1_1priority__queue" prot="public">std::priority_queue</innerclass>
    <innerclass refid="d6/d14/classstd_1_1queue" prot="public">std::queue</innerclass>
    <innerclass refid="d0/d08/classstd_1_1range__error" prot="public">std::range_error</innerclass>
    <innerclass refid="db/d3e/classstd_1_1runtime__error" prot="public">std::runtime_error</innerclass>
    <innerclass refid="d3/d47/classstd_1_1set" prot="public">std::set</innerclass>
    <innerclass refid="dc/d53/classstd_1_1smart__ptr" prot="public">std::smart_ptr</innerclass>
    <innerclass refid="db/d43/classstd_1_1stack" prot="public">std::stack</innerclass>
    <innerclass refid="d8/d29/classstd_1_1string" prot="public">std::string</innerclass>
    <innerclass refid="d0/d53/classstd_1_1stringstream" prot="public">std::stringstream</innerclass>
    <innerclass refid="d3/dc3/classstd_1_1system__error" prot="public">std::system_error</innerclass>
    <innerclass refid="d6/d35/classstd_1_1thread" prot="public">std::thread</innerclass>
    <innerclass refid="dc/dac/classstd_1_1tuple__element_3_01N_00_01_1_1nlohmann_1_1detail_1_1iteration__proxy__value_3_01IteratorType_01_4_01_4" prot="public">std::tuple_element&lt; N, ::nlohmann::detail::iteration_proxy_value&lt; IteratorType &gt; &gt;</innerclass>
    <innerclass refid="da/d86/classstd_1_1tuple__size_3_1_1nlohmann_1_1detail_1_1iteration__proxy__value_3_01IteratorType_01_4_01_4" prot="public">std::tuple_size&lt;::nlohmann::detail::iteration_proxy_value&lt; IteratorType &gt; &gt;</innerclass>
    <innerclass refid="d3/db3/classstd_1_1underflow__error" prot="public">std::underflow_error</innerclass>
    <innerclass refid="dd/def/classstd_1_1unique__ptr" prot="public">std::unique_ptr</innerclass>
    <innerclass refid="d4/d3a/classstd_1_1unordered__map" prot="public">std::unordered_map</innerclass>
    <innerclass refid="d7/d76/classstd_1_1unordered__multimap" prot="public">std::unordered_multimap</innerclass>
    <innerclass refid="de/d04/classstd_1_1unordered__multiset" prot="public">std::unordered_multiset</innerclass>
    <innerclass refid="dc/d64/classstd_1_1unordered__set" prot="public">std::unordered_set</innerclass>
    <innerclass refid="dc/d18/classstd_1_1valarray" prot="public">std::valarray</innerclass>
    <innerclass refid="dd/d4e/classstd_1_1vector" prot="public">std::vector</innerclass>
    <innerclass refid="da/d49/classstd_1_1weak__ptr" prot="public">std::weak_ptr</innerclass>
    <innerclass refid="d9/df9/classstd_1_1wfstream" prot="public">std::wfstream</innerclass>
    <innerclass refid="d2/dd5/classstd_1_1wifstream" prot="public">std::wifstream</innerclass>
    <innerclass refid="d1/d15/classstd_1_1wios" prot="public">std::wios</innerclass>
    <innerclass refid="d1/dba/classstd_1_1wistream" prot="public">std::wistream</innerclass>
    <innerclass refid="d7/d86/classstd_1_1wistringstream" prot="public">std::wistringstream</innerclass>
    <innerclass refid="d3/dfc/classstd_1_1wofstream" prot="public">std::wofstream</innerclass>
    <innerclass refid="d2/d72/classstd_1_1wostream" prot="public">std::wostream</innerclass>
    <innerclass refid="d0/d0f/classstd_1_1wostringstream" prot="public">std::wostringstream</innerclass>
    <innerclass refid="d3/d05/classstd_1_1wstring" prot="public">std::wstring</innerclass>
    <innerclass refid="d0/d29/classstd_1_1wstringstream" prot="public">std::wstringstream</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="d5/db8/json_8hpp_1af3f2c23f946bf81b153b863b4acf6bb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void std::swap&lt; nlohmann::json &gt;</definition>
        <argsstring>(nlohmann::json &amp;j1, nlohmann::json &amp;j2) noexcept(//NOLINT(readability-inconsistent-declaration-parameter-name) is_nothrow_move_constructible&lt; nlohmann::json &gt;::value &amp;&amp;//NOLINT(misc-redundant-expression) is_nothrow_move_assignable&lt; nlohmann::json &gt;::value)</argsstring>
        <name>swap&lt; nlohmann::json &gt;</name>
        <param>
          <type><ref refid="d3/d9b/namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474" kindref="member">nlohmann::json</ref> &amp;</type>
          <declname>j1</declname>
        </param>
        <param>
          <type><ref refid="d3/d9b/namespacenlohmann_1a2bfd99e845a2e5cd90aeaf1b1431f474" kindref="member">nlohmann::json</ref> &amp;</type>
          <declname>j2</declname>
        </param>
        <briefdescription>
<para>exchanges the values of two JSON objects </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="since"><para>version 1.0.0 </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="25910" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="25910" bodyend="25916"/>
        <references refid="d5/db8/json_8hpp_1a5338981b5ad9027c9e54b1c5597f4344" compoundref="d5/db8/json_8hpp" startline="1456">JSON_HEDLEY_NON_NULL</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STL namespace. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="[STL]" line="1" column="1"/>
  </compounddef>
</doxygen>
