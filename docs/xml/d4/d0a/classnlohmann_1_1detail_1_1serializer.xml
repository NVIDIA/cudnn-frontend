<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="d4/d0a/classnlohmann_1_1detail_1_1serializer" kind="class" language="C++" prot="public">
    <compoundname>nlohmann::detail::serializer</compoundname>
    <includes refid="d5/db8/json_8hpp" local="no">json.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename BasicJsonType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ad08aa54fac1dd0a453320c54137d45ba" prot="private" static="no">
        <type>typename BasicJsonType::string_t</type>
        <definition>using nlohmann::detail::serializer&lt; BasicJsonType &gt;::string_t =  typename BasicJsonType::string_t</definition>
        <argsstring></argsstring>
        <name>string_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15985" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15985" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a460c6794fbabbb2ae83380e987a6c030" prot="private" static="no">
        <type>typename BasicJsonType::number_float_t</type>
        <definition>using nlohmann::detail::serializer&lt; BasicJsonType &gt;::number_float_t =  typename BasicJsonType::number_float_t</definition>
        <argsstring></argsstring>
        <name>number_float_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15986" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae7b1df1c70bdec1371f297567726a198" prot="private" static="no">
        <type>typename BasicJsonType::number_integer_t</type>
        <definition>using nlohmann::detail::serializer&lt; BasicJsonType &gt;::number_integer_t =  typename BasicJsonType::number_integer_t</definition>
        <argsstring></argsstring>
        <name>number_integer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15987" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a16c7b7a726a38ff0c06dce7ba7968391" prot="private" static="no">
        <type>typename BasicJsonType::number_unsigned_t</type>
        <definition>using nlohmann::detail::serializer&lt; BasicJsonType &gt;::number_unsigned_t =  typename BasicJsonType::number_unsigned_t</definition>
        <argsstring></argsstring>
        <name>number_unsigned_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15988" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1aaaec32f2fec57db422019a11994f7bb5" prot="private" static="no">
        <type>typename BasicJsonType::binary_t::value_type</type>
        <definition>using nlohmann::detail::serializer&lt; BasicJsonType &gt;::binary_char_t =  typename BasicJsonType::binary_t::value_type</definition>
        <argsstring></argsstring>
        <name>binary_char_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15989" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15989" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a2311a8c756c4a119aa82cd55301d13bc" prot="private" static="yes" mutable="no">
        <type>constexpr std::uint8_t</type>
        <definition>constexpr std::uint8_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::UTF8_ACCEPT</definition>
        <argsstring></argsstring>
        <name>UTF8_ACCEPT</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15990" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a833bd5805e4380549f4e21c304820d6d" prot="private" static="yes" mutable="no">
        <type>constexpr std::uint8_t</type>
        <definition>constexpr std::uint8_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::UTF8_REJECT</definition>
        <argsstring></argsstring>
        <name>UTF8_REJECT</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15991" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15991" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1af15da74dab5b01150eabfed0be7d75df" prot="public" static="no" mutable="no">
        <type><ref refid="d5/db8/json_8hpp_1a2cf645f34610e7f7d6e09ab88a2ab917" kindref="member">JSON_PRIVATE_UNLESS_TESTED</ref></type>
        <definition>JSON_PRIVATE_UNLESS_TESTED nlohmann::detail::serializer&lt; BasicJsonType &gt;::__pad0__</definition>
        <argsstring></argsstring>
        <name>__pad0__</name>
        <bitfield> void dump_escaped(const string_t&amp; s</bitfield>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16308" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16323" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ab4c340f2a5230f766a833366603a0049" prot="public" static="no" mutable="no">
        <type><ref refid="d5/db8/json_8hpp_1a2cf645f34610e7f7d6e09ab88a2ab917" kindref="member">JSON_PRIVATE_UNLESS_TESTED</ref> const bool</type>
        <definition>JSON_PRIVATE_UNLESS_TESTED const bool nlohmann::detail::serializer&lt; BasicJsonType &gt;::ensure_ascii</definition>
        <argsstring></argsstring>
        <name>ensure_ascii</name>
        <initializer>{
        std::uint32_t codepoint{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16323" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16324" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a39b0975f219b542d7ca633652e925b4c" prot="public" static="no" mutable="no">
        <type>std::uint8_t</type>
        <definition>std::uint8_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::state</definition>
        <argsstring></argsstring>
        <name>state</name>
        <initializer>= <ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a2311a8c756c4a119aa82cd55301d13bc" kindref="member">UTF8_ACCEPT</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16326" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16326" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a4239a42672c7378a6b449ee010e6dace" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::bytes</definition>
        <argsstring></argsstring>
        <name>bytes</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16327" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9ae3daaea1941fd02d4c3c1b0f5fbe68" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::bytes_after_last_accept</definition>
        <argsstring></argsstring>
        <name>bytes_after_last_accept</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16330" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a814f27bba20f0e109d0dbcaa4a399415" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::undumped_chars</definition>
        <argsstring></argsstring>
        <name>undumped_chars</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16331" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae510f640d26ce0f7d5eb8191b31591c0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::else</definition>
        <argsstring></argsstring>
        <name>else</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16533" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16534" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a1a9d8b344a6cb47728a3519693ec03d1" prot="public" static="no" mutable="no">
        <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5" kindref="member">std::array</ref>&lt; char, 64 &gt;</type>
        <definition>std::array&lt;char, 64&gt; nlohmann::detail::serializer&lt; BasicJsonType &gt;::number_buffer</definition>
        <argsstring></argsstring>
        <name>number_buffer</name>
        <initializer>{{}}</initializer>
        <briefdescription>
<para>a (hopefully) large enough character buffer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16876" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16876" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a1952945b7652afb59d3903cc8457a589" prot="public" static="no" mutable="no">
        <type>const std::lconv *</type>
        <definition>const std::lconv* nlohmann::detail::serializer&lt; BasicJsonType &gt;::loc</definition>
        <argsstring></argsstring>
        <name>loc</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
<para>the locale </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16879" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16879" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a78a6ae833bb6cf7f00cb0d51db114b14" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char nlohmann::detail::serializer&lt; BasicJsonType &gt;::thousands_sep</definition>
        <argsstring></argsstring>
        <name>thousands_sep</name>
        <initializer>= &apos;\0&apos;</initializer>
        <briefdescription>
<para>the locale&apos;s thousand separator character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16881" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16881" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a311e5d6f4b31d5be0eb3c0cb20b6965a" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char nlohmann::detail::serializer&lt; BasicJsonType &gt;::decimal_point</definition>
        <argsstring></argsstring>
        <name>decimal_point</name>
        <initializer>= &apos;\0&apos;</initializer>
        <briefdescription>
<para>the locale&apos;s decimal point character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16883" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16883" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9c9b7ca63a66e59e5e7ffe8a2acf5c8f" prot="public" static="no" mutable="no">
        <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5" kindref="member">std::array</ref>&lt; char, 512 &gt;</type>
        <definition>std::array&lt;char, 512&gt; nlohmann::detail::serializer&lt; BasicJsonType &gt;::string_buffer</definition>
        <argsstring></argsstring>
        <name>string_buffer</name>
        <initializer>{{}}</initializer>
        <briefdescription>
<para>string buffer </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16886" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16886" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9a55e6b028d09676fe35aefa0c72ea5b" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char nlohmann::detail::serializer&lt; BasicJsonType &gt;::indent_char</definition>
        <argsstring></argsstring>
        <name>indent_char</name>
        <briefdescription>
<para>the indentation character </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16889" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16889" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae9268a10d88a5526e32735a55a132fc6" prot="public" static="no" mutable="no">
        <type><ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ad08aa54fac1dd0a453320c54137d45ba" kindref="member">string_t</ref></type>
        <definition>string_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::indent_string</definition>
        <argsstring></argsstring>
        <name>indent_string</name>
        <briefdescription>
<para>the indentation string </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16891" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16891" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a09d5a046fb0f7cb61977d6e5fbe8b3a1" prot="public" static="no" mutable="no">
        <type>const <ref refid="dc/df0/namespacenlohmann_1_1detail_1a5a76b60b26dc8c47256a996d18d967df" kindref="member">error_handler_t</ref></type>
        <definition>const error_handler_t nlohmann::detail::serializer&lt; BasicJsonType &gt;::error_handler</definition>
        <argsstring></argsstring>
        <name>error_handler</name>
        <briefdescription>
<para>error_handler how to react on decoding errors </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16894" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16894" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ac010525281d97867ee842da37294fe83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::serializer</definition>
        <argsstring>(output_adapter_t&lt; char &gt; s, const char ichar, error_handler_t error_handler_=error_handler_t::strict)</argsstring>
        <name>serializer</name>
        <param>
          <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a9b680ddfb58f27eb53a67229447fc556" kindref="member">output_adapter_t</ref>&lt; char &gt;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>ichar</declname>
        </param>
        <param>
          <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a5a76b60b26dc8c47256a996d18d967df" kindref="member">error_handler_t</ref></type>
          <declname>error_handler_</declname>
          <defval><ref refid="dc/df0/namespacenlohmann_1_1detail_1a5a76b60b26dc8c47256a996d18d967dfa2133fd717402a7966ee88d06f9e0b792" kindref="member">error_handler_t::strict</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>output stream to serialize to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ichar</parametername>
</parameternamelist>
<parameterdescription>
<para>indentation character to use </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">error_handler_</parametername>
</parameternamelist>
<parameterdescription>
<para>how to react on decoding errors </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15999" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15999" bodyend="16008"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae3771351ec4cb892bec707edeb56dc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::serializer</definition>
        <argsstring>(const serializer &amp;)=delete</argsstring>
        <name>serializer</name>
        <param>
          <type>const <ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16011" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a5f14c33012477b9f9876dc54d97009a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;</type>
        <definition>serializer&amp; nlohmann::detail::serializer&lt; BasicJsonType &gt;::operator=</definition>
        <argsstring>(const serializer &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16012" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a28081304e70cca6b3042c101ee5c498c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::serializer</definition>
        <argsstring>(serializer &amp;&amp;)=delete</argsstring>
        <name>serializer</name>
        <param>
          <type><ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16013" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1acaafe3436ee5fb74777eb4132a88c513" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;</type>
        <definition>serializer&amp; nlohmann::detail::serializer&lt; BasicJsonType &gt;::operator=</definition>
        <argsstring>(serializer &amp;&amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer" kindref="compound">serializer</ref> &amp;&amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16014" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1aa6c62b51cbebb185307df851dc0167f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::~serializer</definition>
        <argsstring>()=default</argsstring>
        <name>~serializer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a95460ebd1a535a543e5a0ec52e00f48b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/df0/namespacenlohmann_1_1detail_1a59fca69799f6b9e366710cb9043aa77d" kindref="member">void</ref></type>
        <definition>void nlohmann::detail::serializer&lt; BasicJsonType &gt;::dump</definition>
        <argsstring>(const BasicJsonType &amp;val, const bool pretty_print, const bool ensure_ascii, const unsigned int indent_step, const unsigned int current_indent=0)</argsstring>
        <name>dump</name>
        <param>
          <type>const BasicJsonType &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>pretty_print</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>ensure_ascii</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>indent_step</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>current_indent</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>internal implementation of the serialization function </para>        </briefdescription>
        <detaileddescription>
<para>This function is called by the public member function dump and organizes the serialization internally. The indentation level is propagated as additional parameter. In case of arrays and objects, the function is called recursively.</para><para><itemizedlist>
<listitem><para>strings and object keys are escaped using <computeroutput>escape_string()</computeroutput></para></listitem><listitem><para>integer numbers are converted implicitly via <computeroutput>operator&lt;&lt;</computeroutput></para></listitem><listitem><para>floating-point numbers are converted to a string using <computeroutput>&quot;%g&quot;</computeroutput> format</para></listitem><listitem><para>binary values are serialized as objects containing the subtype and the byte array</para></listitem></itemizedlist>
</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>value to serialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">pretty_print</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the output shall be pretty-printed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ensure_ascii</parametername>
</parameternamelist>
<parameterdescription>
<para>If <emphasis>ensure_ascii</emphasis> is true, all non-ASCII characters in the output are escaped with <computeroutput>\uXXXX</computeroutput> sequences, and the result consists of ASCII characters only. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">indent_step</parametername>
</parameternamelist>
<parameterdescription>
<para>the indent level </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">current_indent</parametername>
</parameternamelist>
<parameterdescription>
<para>the current indent level (only used internally) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16039" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16039" bodyend="16306"/>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985af1f713c9e000f5d3f280adbd124df4f5">nlohmann::detail::array</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985a9d7183f16acce70658f686ae7f1a4d20">nlohmann::detail::binary</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985a84e2c64f38f78ba3ea5c905ab5a2da27">nlohmann::detail::boolean</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985a94708897ec9db8647dfe695714c98e46">nlohmann::detail::discarded</references>
        <references refid="d5/db8/json_8hpp_1a69f131cff49da1989667220173fbeae6" compoundref="d5/db8/json_8hpp" startline="2292">JSON_ASSERT</references>
        <references refid="d5/db8/json_8hpp_1a8df7de76ab3c9445f46f6994ec205bcd" compoundref="d5/db8/json_8hpp" startline="1564">JSON_HEDLEY_UNLIKELY</references>
        <references refid="d5/db8/json_8hpp_1a2cf645f34610e7f7d6e09ab88a2ab917" compoundref="d5/db8/json_8hpp" startline="2299">JSON_PRIVATE_UNLESS_TESTED</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985a37a6259cc0c1dae299a7866489dff0bd">nlohmann::detail::null</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ad9966ecb59667235a57b4b999a649eef">nlohmann::detail::number_float</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985a5763da164f8659d94a56e29df64b4bcc">nlohmann::detail::number_integer</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985adce7cc8ec29055c4158828921f2f265e">nlohmann::detail::number_unsigned</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985aa8cfde6331bd59eb2ac96f8911c4b666">nlohmann::detail::object</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21">nlohmann::detail::string</references>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ab14b8ec1f8102aa4c7e3c349f317654e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::for</definition>
        <argsstring>(std::size_t i=0;i&lt; s.size();++i)</argsstring>
        <name>for</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16333" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16333" bodyend="16522"/>
        <references refid="da/d1c/classnlohmann_1_1detail_1_1type__error_1a838a5e301cf97289c2d106b9ace1470f" compoundref="d5/db8/json_8hpp" startline="2916" endline="2920">nlohmann::detail::type_error::create</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a58bb1ef1a9ad287a9cfaf1855784d9aca567bc1d268f135496de3d5b946b691f3">nlohmann::detail::ignore</references>
        <references refid="d5/db8/json_8hpp_1a69f131cff49da1989667220173fbeae6" compoundref="d5/db8/json_8hpp" startline="2292">JSON_ASSERT</references>
        <references refid="d5/db8/json_8hpp_1a6c274f6db2e65c1b66c7d41b06ad690f" compoundref="d5/db8/json_8hpp" startline="2263">JSON_THROW</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a5a76b60b26dc8c47256a996d18d967dfa9dde360102c103867bd2f45872f1129c">nlohmann::detail::replace</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a5a76b60b26dc8c47256a996d18d967dfa2133fd717402a7966ee88d06f9e0b792">nlohmann::detail::strict</references>
        <references refid="dc/df0/namespacenlohmann_1_1detail_1a1ed8fc6239da25abcaf681d30ace4985ab45cffe084dd3d20d928bee85e7b0f21">nlohmann::detail::string</references>
        <references refid="df/d1a/classnlohmann_1_1detail_1_1binary__writer_1ab77aa48692bd4e64e4f051ce6aeb6d2d" compoundref="d5/db8/json_8hpp" startline="14786" endline="14789">nlohmann::detail::binary_writer&lt; BasicJsonType, CharType &gt;::to_char_type</references>
        <references refid="d3/d9b/namespacenlohmann_1a6ce645a0b8717757e096a5b5773b7a16" compoundref="d5/db8/json_8hpp" startline="25855" endline="25858">nlohmann::to_string</references>
      </memberdef>
      <memberdef kind="function" id="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a6705bbf2de3070ec50a810a32e72309f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nlohmann::detail::serializer&lt; BasicJsonType &gt;::if</definition>
        <argsstring>(JSON_HEDLEY_LIKELY(state==UTF8_ACCEPT))</argsstring>
        <name>if</name>
        <param>
          <type><ref refid="d5/db8/json_8hpp_1a355f2770653ff7bdd5c74b204b5a3ad0" kindref="member">JSON_HEDLEY_LIKELY</ref>(<ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a39b0975f219b542d7ca633652e925b4c" kindref="member">state</ref>==<ref refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a2311a8c756c4a119aa82cd55301d13bc" kindref="member">UTF8_ACCEPT</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="16525" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="16525" bodyend="16532"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1060">
        <label>size_t</label>
      </node>
      <node id="1061">
        <label>const error_handler_t</label>
      </node>
      <node id="1054">
        <label>T</label>
      </node>
      <node id="1059">
        <label>JSON_PRIVATE_UNLESS_TESTED</label>
      </node>
      <node id="1053">
        <label>std::array&lt; T &gt;</label>
        <childnode refid="1054" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
      </node>
      <node id="1058">
        <label>std::array&lt; char, 512 &gt;</label>
        <childnode refid="1052" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="1053" relation="template-instance">
          <edgelabel>&lt; char, 512 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1056">
        <label>lconv *</label>
      </node>
      <node id="1055">
        <label>uint8_t</label>
      </node>
      <node id="1051">
        <label>std::array&lt; char, 64 &gt;</label>
        <childnode refid="1052" relation="usage">
          <edgelabel>+elements</edgelabel>
        </childnode>
        <childnode refid="1053" relation="template-instance">
          <edgelabel>&lt; char, 64 &gt;</edgelabel>
        </childnode>
      </node>
      <node id="1057">
        <label>string_t</label>
      </node>
      <node id="1052">
        <label>char</label>
      </node>
      <node id="1050">
        <label>nlohmann::detail::serializer&lt; BasicJsonType &gt;</label>
        <link refid="d4/d0a/classnlohmann_1_1detail_1_1serializer"/>
        <childnode refid="1051" relation="usage">
          <edgelabel>+number_buffer</edgelabel>
        </childnode>
        <childnode refid="1055" relation="usage">
          <edgelabel>-UTF8_ACCEPT</edgelabel>
          <edgelabel>-UTF8_REJECT</edgelabel>
        </childnode>
        <childnode refid="1056" relation="usage">
          <edgelabel>+loc</edgelabel>
        </childnode>
        <childnode refid="1052" relation="usage">
          <edgelabel>+indent_char</edgelabel>
          <edgelabel>+decimal_point</edgelabel>
          <edgelabel>+thousands_sep</edgelabel>
        </childnode>
        <childnode refid="1055" relation="usage">
          <edgelabel>+state</edgelabel>
        </childnode>
        <childnode refid="1057" relation="usage">
          <edgelabel>+indent_string</edgelabel>
        </childnode>
        <childnode refid="1058" relation="usage">
          <edgelabel>+string_buffer</edgelabel>
        </childnode>
        <childnode refid="1059" relation="usage">
          <edgelabel>+__pad0__</edgelabel>
          <edgelabel>+ensure_ascii</edgelabel>
        </childnode>
        <childnode refid="1060" relation="usage">
          <edgelabel>+bytes_after_last_accept</edgelabel>
          <edgelabel>+bytes</edgelabel>
          <edgelabel>+undumped_chars</edgelabel>
        </childnode>
        <childnode refid="1061" relation="usage">
          <edgelabel>+error_handler</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" line="15984" column="1" bodyfile="/home/agopal/trees/cudnn-frontend/include/contrib/nlohmann/json/json.hpp" bodystart="15983" bodyend="16895"/>
    <listofallmembers>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1af15da74dab5b01150eabfed0be7d75df" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>__pad0__</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1aaaec32f2fec57db422019a11994f7bb5" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>binary_char_t</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a4239a42672c7378a6b449ee010e6dace" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>bytes</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9ae3daaea1941fd02d4c3c1b0f5fbe68" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>bytes_after_last_accept</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a311e5d6f4b31d5be0eb3c0cb20b6965a" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>decimal_point</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a95460ebd1a535a543e5a0ec52e00f48b" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>dump</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae510f640d26ce0f7d5eb8191b31591c0" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>else</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ab4c340f2a5230f766a833366603a0049" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>ensure_ascii</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a09d5a046fb0f7cb61977d6e5fbe8b3a1" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>error_handler</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ab14b8ec1f8102aa4c7e3c349f317654e" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>for</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a6705bbf2de3070ec50a810a32e72309f" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>if</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9a55e6b028d09676fe35aefa0c72ea5b" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>indent_char</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae9268a10d88a5526e32735a55a132fc6" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>indent_string</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a1952945b7652afb59d3903cc8457a589" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>loc</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a1a9d8b344a6cb47728a3519693ec03d1" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>number_buffer</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a460c6794fbabbb2ae83380e987a6c030" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>number_float_t</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae7b1df1c70bdec1371f297567726a198" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>number_integer_t</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a16c7b7a726a38ff0c06dce7ba7968391" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>number_unsigned_t</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a5f14c33012477b9f9876dc54d97009a0" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>operator=</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1acaafe3436ee5fb74777eb4132a88c513" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>operator=</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ac010525281d97867ee842da37294fe83" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>serializer</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ae3771351ec4cb892bec707edeb56dc31" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>serializer</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a28081304e70cca6b3042c101ee5c498c" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>serializer</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a39b0975f219b542d7ca633652e925b4c" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>state</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a9c9b7ca63a66e59e5e7ffe8a2acf5c8f" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>string_buffer</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1ad08aa54fac1dd0a453320c54137d45ba" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>string_t</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a78a6ae833bb6cf7f00cb0d51db114b14" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>thousands_sep</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a814f27bba20f0e109d0dbcaa4a399415" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>undumped_chars</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a2311a8c756c4a119aa82cd55301d13bc" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>UTF8_ACCEPT</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1a833bd5805e4380549f4e21c304820d6d" prot="private" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>UTF8_REJECT</name></member>
      <member refid="d4/d0a/classnlohmann_1_1detail_1_1serializer_1aa6c62b51cbebb185307df851dc0167f0" prot="public" virt="non-virtual"><scope>nlohmann::detail::serializer</scope><name>~serializer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
